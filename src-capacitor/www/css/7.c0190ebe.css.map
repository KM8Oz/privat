{"version":3,"sources":["/var/www/html/privat/src/pages/desktop/src/pages/desktop/live.vue","/var/www/html/privat/src/pages/mobile/src/pages/mobile/live.vue"],"names":[],"mappings":"AAowBA,6BACA,iBAAA,CACA,UAAA,CACA,cAAA,CACA,cACA,CAEA,uBACA,aACA,CCjJA,wBACA,WAAA,CACA,WACA,CACA,uBACA,WACA,CACA,uBACA,eACA,CACA,sBACA,YACA,CACA,sBACA,SACA,CACA,uBACA,SACA,CACA,uBACA,eACA,CACA,wBACA,eACA,CACA,wBACA,gBAAA,CACA,iBAAA,CACA,WACA,CACA,gCACA,eAAA,CACA,YAAA,CACA,iBAAA,CACA,UAAA,CACA,WAAA,CACA,eACA,CAEA,uCACA,iBAAA,CACA,KAAA,CACA,MAAA,CACA,UAAA,CACA,WACA,CACA,0BACA,0BAAA,CACA,iBAAA,CACA,KAAA,CACA,MAAA,CACA,UAAA,CACA,WAAA,CACA,SACA,CACA,6BACA,iBAAA,CACA,UAAA,CACA,cAAA,CACA,cACA,CACA,uBACA,iBAAA,CACA,SAAA,CACA,WACA,CACA,wBACA,iBAAA,CACA,SAAA,CACA,eAAA,CACA,WAAA,CACA,UAAA,CACA,iBACA,CAEA,wBACA,UAAA,CACA,kBACA,CACA,uBACA,aACA","file":"7.c0190ebe.css","sourcesContent":["<template>\n  <q-page :class=\"pcm.controls.dark ? 'bg-dark' : 'bg-white'\">\n    <div class=\"row\" style=\"min-height: inherit\">\n      <div class=\"col-8\">\n        <div class=\"full-width row justify-end\">\n          <!-- <q-btn\n            @click=\"report = true\"\n            rounded\n            dense\n            class=\"q-mr-sm text-white flex items-baseline\"\n            no-caps\n            icon=\"o_flag\"\n            style=\"margin-bottom: -10vh;z-index: 5;height: 5vh\"\n            flat\n            align=\"right\"\n          >\n            <p class=\"q-ma-none\">Жалоба</p>\n          </q-btn> -->\n        </div>\n        <div\n          v-if=\"false\"\n          style=\"background: rgba(254, 44, 85, 0.7)\"\n          class=\"text-white flex flex-center\"\n        >\n          <div class=\"flex-center row\" style=\"height: 100%\">\n            <p class=\"q-px-xl q-mt-md q-mx-lg\">\n              Модель не онлайн. Уведомить вас о начале стрима?\n            </p>\n          </div>\n        </div>\n        <div class=\"fullpage\">\n        <q-hls :src=\"src\" :wps=\"79\" :hps=\"95\" :c=\"true\"  />\n          <q-icon\n            name=\"hd\"\n            size=\"34px\"\n            @click=\"switchSrc\"\n            class=\"absolute-bottom-left cursor-pointer z-10\"\n            :color=\"videoHD ? 'white' : 'grey'\"\n          />\n        </div>\n        <div\n          v-if=\"privat\"\n          style=\"background: rgba(254, 44, 85, 0.7)\"\n          class=\"text-white flex flex-center\"\n        >\n          <div class=\"justify-center row\" style=\"height: 50vh; max-width: 25vw\">\n            <p class=\"q-px-xl q-mt-md q-mx-lg\">Модель в привате</p>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-4\">\n        <div>\n          <q-card\n            :class=\"`text-black no-shadow ${pcm.controls.dark ? 'bg-dark' : 'bg-white'} `\"\n          >\n            <q-card-section\n              :class=\"`q-ma-none q-pa-none ${\n                pcm.controls.dark ? 'text-white' : 'text-dark'\n              }`\"\n            >\n              <!-- <div class=\"row flex items-center ml-vw-05\">\n                        <q-avatar class size=\"5vh\">\n                          <img style=\"border: 1px solid #ffffff;\" src=\"https://cdn.quasar.dev/img/boy-avatar.png\" />\n                        </q-avatar>\n                        <div>\n                          <p v-if=\"datamodel\" style=\"font-size:min(2.2vh, 35px);\" class=\"col-10 text-weight-medium q-mb-none\">{{datamodel.modelname}}</p>\n                          <div v-if=\"datamodel\" class=\"text-subtitle2 text-gray\" style=\"font-size:min(1.8vh, 28px);\">@{{datamodel.UuserId.username}}</div>\n                        </div>\n                        </div>\n                        <div class=\"row ml-vw-05 q-ma-none\" style=\"overflow:hidden; max-height:calc(min(1.5vh, 25px)*2.9); height:calc(min(1.8vh, 28px)*2.9);\">\n                        <p style=\"font-size:min(1.5vh, 25px);\">{{streamDesc}}</p>\n                        </div>\n                        <div class=\"row\">\n                        <p class=\"q-ma-none text-comment-14 ml-vw-05\">{{tags}}</p>\n              </div>-->\n              <q-card-section class=\"q-ma-none q-pa-none\">\n                <div class=\"row justify-between items-center mt-vh-3\">\n                  <div class=\"row ml-vw-05\">\n                    <q-avatar size=\"5.16vh\">\n                      <img class=\"bordavatar\" :src=\"modelavatar\" />\n                    </q-avatar>\n                    <div class=\"row ml-vw-05\" v-if=\"datamodel\">\n                      <p class=\"col-12 q-mb-none text-subtitle1 mt-vh-05 text-nowrap\">\n                        {{ datamodel.modelname }}\n                        <q-badge color=\"pink-6\" class=\"q-ml-sm q-mb-none\" align=\"middle\">\n                          <span class=\"dot q-mr-xs bg-white\"></span> live\n                        </q-badge>\n                      </p>\n                      <p\n                        class=\"text-grey-8 col-12 cuttext text-nowrap text-comment-14 q-mb-none h-vh-3\"\n                      >\n                        @{{ datamodel.UuserId.username }}\n                      </p>\n                    </div>\n                    <q-icon v-if=\"vibroenable == 'enabled'\">\n                      <q-img src=\"../../assets/vibro2000.svg\"></q-img>\n                    </q-icon>\n                  </div>\n                </div>\n                <div class=\"col text-max2-16 ml-vw-05 q-pl-xs\">\n                  <p class=\"text-body1 q-my-none text-weight-light\">{{ streamDesc }}</p>\n                  <p class=\"text-body1 q-my-none text-weight-light\">\n                    {{ tags }}\n                  </p>\n                </div>\n                <!-- {{tags(open_post_data.tags)}} -->\n              </q-card-section>\n              <div class=\"row q-mt-xs\">\n                <q-btn\n                  rounded\n                  size=\"9px\"\n                  class=\"col self-center q-px-none q-py-xs q-ml-xs q-mb-xs q-mt-xs\"\n                  label=\"Приват\"\n                  color=\"pink-6\"\n                  @click=\"privateStart = true\"\n                />\n                <q-btn\n                  rounded\n                  size=\"9px\"\n                  class=\"col self-center q-px-none q-py-xs q-ml-xs q-mb-xs q-mt-xs\"\n                  label=\"Подарить токены\"\n                  color=\"pink-6\"\n                  @click=\"giftDialog = true\"\n                />\n                <q-btn\n                  rounded\n                  size=\"9px\"\n                  class=\"col self-center q-px-none q-py-xs q-ml-xs q-mb-xs q-mt-xs\"\n                  label=\"Оплатить вибро\"\n                  color=\"pink-6\"\n                  @click=\"\n                    () => {\n                      vibroDialog = true;\n                    }\n                  \"\n                />\n                <!-- <q-btn\n                  dense\n                  rounded\n                  outline\n                  color=\"pink-6\"\n                  no-caps\n                  class=\"ml-vw-05\"\n                  @click=\"checklive()\"\n                >\n                  <p class=\"q-ma-none q-pa-none text-comment-14\">Подписаться</p>\n                </q-btn> -->\n              </div>\n            </q-card-section>\n            <q-separator />\n          </q-card>\n        </div>\n        <q-scroll-area\n          ref=\"chatscroll\"\n          v-if=\"datachat.length > 0\"\n          class=\"row q-pa-none vh-55\"\n          :thumb-style=\"thumbStyle\"\n          :bar-style=\"barStyle\"\n        >\n          <!-- <div style=\"width: 95%;\" class=\"text-white\" v-for=\"(item, index) in datachat\" :key=\"index\">\n                    <div class=\"q-ma-none row flexchat\" v-if=\"item.ismodel == true\">\n                        <b class=\"text-pink-6 text-comment-18\">{{ item.name }}:</b>\n                        <p class=\"text-comment-14 text-pink-6 q-ma-none\">\n                            {{ item.text }}\n                        </p>\n                    </div>\n                    <div class=\"q-ma-none row flexchat\" v-else>\n                        <b class=\"text-grey text-comment-18\">{{ item.name }}:</b>\n                        <p class=\"text-black text-comment-14 q-ma-none\">\n                            {{ item.text }}\n                        </p>\n                    </div>\n                </div> -->\n          <q-chat-message\n            :class=\"item.id !== pcm.user.id ? 'row q-ml-md': 'row justify-end q-mr-md'\"\n            :sent=\"item.id !== pcm.user.id\"\n            :label-sanitize=\"true\"\n            v-for=\"(item, index) in datachat\"\n            :key=\"index\"\n            :bg-color=\"item.ismodel ? 'pink-6' : 'amber-7'\"\n            :name=\"item.name\"\n            :avatar=\"item.avatar\"\n            :text=\"[item.text]\"\n            :stamp=\"\n              getdatediff(item.date).month !== 0\n                ? `${getdatediff(item.date).month} months ago`\n                : getdatediff(item.date).day !== 0\n                ? `${getdatediff(item.date).day} days ago`\n                : getdatediff(item.date).hr !== 0\n                ? `${getdatediff(item.date).hr} hrs ago`\n                : `${getdatediff(item.date).min} min ago`\n            \"\n          />\n        </q-scroll-area>\n        <!-- <div class=\"vw-25 h-100\">\n                <q-input v-on:keyup.enter=\"send_comment()\" v-model=\"chat_send\" placeholder=\"Ваше сообщение\" class=\"sendfix text-white h-v bg-white col-10\" />\n                <q-btn class=\"col-2\" flat @click=\"send_comment()\">\n                    <q-icon color=\"grey\" name=\"mdi-send\" class=\"mb0\" />\n                </q-btn>\n            </div> -->\n        <div class=\"row absolute-bottom-right w-vw-chat\">\n          <q-input\n            v-on:keyup.enter=\"send_comment()\"\n            v-model=\"chat_send\"\n            placeholder=\"Ваше сообщение\"\n            borderless\n            :color=\"pcm.controls.dark ? 'dark' : 'white'\"\n            :input-class=\"`text-body1 backy-cmt ${\n              pcm.controls.dark ? 'text-white' : 'text-dark'\n            }  q-my-md q-pl-md q-ml-none`\"\n            class=\"col-10 backy-cmt2 q-my-xs q-ml-xs\"\n          >\n            <template v-slot:prepend>\n              <q-fab\n                v-model=\"fabLeft\"\n                vertical-actions-align=\"left\"\n                :class=\"`${\n                  pcm.controls.dark ? 'text-white' : 'text-dark'\n                } q-my-auto text-center q-pa-none`\"\n                icon=\"keyboard_arrow_up\"\n                direction=\"up\"\n              >\n                <q-fab-action\n                  label-position=\"right\"\n                  color=\"pink-6\"\n                  icon=\"vpn_lock\"\n                  label=\"Приват\"\n                />\n                <q-fab-action\n                  label-position=\"right\"\n                  color=\"pink-3\"\n                  icon=\"redeem\"\n                  label=\"Подарить токены\"\n                />\n              </q-fab>\n            </template>\n          </q-input>\n\n          <q-btn\n            color=\"green\"\n            class=\"btnsend q-my-auto q-mx-auto text-center\"\n            align=\"center\"\n            icon=\"mdi-send\"\n            outline\n            round\n            text-color=\"green\"\n            @click=\"send_comment()\"\n          >\n          </q-btn>\n        </div>\n      </div>\n    </div>\n    <q-dialog v-model=\"report\" maximized persistent></q-dialog>\n    <q-dialog v-model=\"giftDialog\">\n      <q-card\n        class=\"text-white fit flex flex-center\"\n        style=\"background: rgba(254, 44, 85, 0.7)\"\n      >\n        <div class=\"justify-center row\">\n          <q-avatar class=\"col-12\" icon=\"card_giftcard\"></q-avatar>\n          <p class=\"q-px-xl q-mt-md q-mx-lg text-center col-10\" style=\"font-size: 2vw\">\n            Вы можете подарить не более {{ userToken }} токенов\n          </p>\n          <q-input\n            rounded\n            outlined\n            dense\n            dark\n            class=\"col-12 q-px-xl q-mt-md q-mx-lg text-white\"\n            v-model=\"amountGift\"\n            placeholder=\"Сумма токенов\"\n          />\n          <q-btn\n            class=\"text-red bg-white text-weight-bold col-4 q-mr-sm q-mt-xs\"\n            @click=\"() => null\"\n            style=\"border-radius: 30px\"\n            >Да</q-btn\n          >\n          <q-btn\n            class=\"text-weight-bold bg-grey text-white col-4 q-ml-sm q-mt-xs\"\n            style=\"border-radius: 30px\"\n            @click=\"giftDialog = false\"\n            >Нет</q-btn\n          >\n        </div>\n      </q-card>\n    </q-dialog>\n    <q-dialog v-model=\"vibroDialog\">\n      <q-card\n        class=\"text-white fit flex flex-center\"\n        style=\"background: rgba(254, 44, 85, 0.7)\"\n      >\n        <div class=\"justify-center row\">\n          <q-avatar class=\"col-12\" icon=\"card_giftcard\"></q-avatar>\n          <p class=\"q-px-xl q-mt-md q-mx-lg text-center col-10\" style=\"font-size: 2vw\">\n            У вас имеется {{ userToken }} токенов\n          </p>\n          <q-btn\n            class=\"text-red bg-white text-weight-bold col-4 q-mr-sm q-mt-xs\"\n            @click=\"test_lush(1)\"\n            style=\"border-radius: 30px\"\n            >1 секунда</q-btn\n          >\n          <q-btn\n            class=\"text-red bg-white text-weight-bold col-4 q-mr-sm q-mt-xs\"\n            @click=\"test_lush(5)\"\n            style=\"border-radius: 30px\"\n            >5 секунд</q-btn\n          >\n          <q-btn\n            class=\"text-red bg-white text-weight-bold col-4 q-mr-sm q-mt-xs\"\n            @click=\"test_lush(10)\"\n            style=\"border-radius: 30px\"\n            >10 секунд</q-btn\n          >\n          <q-btn\n            class=\"text-red bg-white text-weight-bold col-4 q-mr-sm q-mt-xs\"\n            @click=\"test_lush(15)\"\n            style=\"border-radius: 30px\"\n            >15 секунд</q-btn\n          >\n\n          <q-btn\n            class=\"text-weight-bold bg-grey text-white col-4 q-ml-sm q-mt-xs\"\n            style=\"border-radius: 30px\"\n            @click=\"vibroDialog = false\"\n            >отмена</q-btn\n          >\n        </div>\n      </q-card>\n    </q-dialog>\n    <q-dialog v-model=\"privateStart\" v-if=\"userToken > sumPrivat\">\n      <q-card\n        class=\"text-white fit flex flex-center\"\n        style=\"background: rgba(254, 44, 85, 0.7)\"\n      >\n        <div class=\"justify-center row\">\n          <q-avatar class=\"col-12\" icon=\"videocam\"></q-avatar>\n          <p class=\"q-px-xl q-mt-md q-mx-lg text-center col-10\" style=\"font-size: 2vw\">\n            Внимание у вас {{ userToken }} токенов за приват модель просит\n            {{ sumPrivat }} в минуту. Вы хотите начать приват?\n          </p>\n          <q-btn\n            class=\"text-red bg-white text-weight-bold col-4 q-mr-sm q-mt-xs\"\n            @click=\"SuccPrivate()\"\n            style=\"border-radius: 30px\"\n            >Да</q-btn\n          >\n          <q-btn\n            class=\"text-weight-bold bg-grey text-white col-4 q-ml-sm q-mt-xs\"\n            style=\"border-radius: 30px\"\n            @click=\"privateStart = false\"\n            >Нет</q-btn\n          >\n        </div>\n      </q-card>\n    </q-dialog>\n    <q-dialog v-model=\"privateStart\" v-else>\n      <q-card\n        class=\"text-white fit flex flex-center\"\n        style=\"background: rgba(254, 44, 85, 0.7)\"\n      >\n        <div class=\"justify-center row\">\n          <q-avatar class=\"col-12\" icon=\"videocam\"></q-avatar>\n          <p class=\"q-px-xl q-mt-md q-mx-lg text-center col-10\" style=\"font-size: 2vw\">\n            У вас недостаточно токенов для привата модель просит\n            {{ sumPrivat }} токенов за минуту\n          </p>\n          <q-btn\n            class=\"text-weight-bold bg-grey text-white col-4 q-ml-sm q-mt-xs\"\n            style=\"border-radius: 30px\"\n            @click=\"privateStart = false\"\n            >ОК</q-btn\n          >\n        </div>\n      </q-card>\n    </q-dialog>\n  </q-page>\n</template>\n\n<script>\nimport http from \"../../http-common\";\nimport { LocalStorage, date } from \"quasar\";\nimport Hls from \"hls.js\";\nimport { mapState } from \"vuex\";\n\nexport default {\n  name: \"StreamWatch\",\n  computed: {\n    player() {\n      return this.$refs.Myplyr.player;\n    },\n    ...mapState([\"pcm\"]),\n  },\n  components: {},\n  props: {\n    options: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n  },\n  data() {\n    return {\n      privateStart: false,\n      hls: null,\n      chat_send: null,\n      madels: 95,\n      sub: \"sub\",\n      report: false,\n      muted: true,\n      link: null,\n      datachat: [],\n      chatmess: null,\n      datamodel: null,\n      privat: false,\n      offline: false,\n      videoHD: true,\n      load: true,\n      giftDialog: false,\n      vibroDialog: false,\n      amountGift: null,\n      userToken: null,\n      streamDesc: null,\n      tags: null,\n      target: null,\n      sum: null,\n      sumPrivat: null,\n      cMode: false,\n      botDesk: null,\n      showPlayer:true,\n      botTime: null,\n      modelavatar: \"https://cdn.quasar.dev/img/boy-avatar.png\",\n      useravatar: \"https://cdn.quasar.dev/img/boy-avatar.png\",\n      chatplayer: null,\n      vibroenable: false,\n      fabLeft: false,\n      thumbStyle: {\n        display: \"none\",\n      },\n      barStyle: {\n        display: \"none\",\n      },\n    };\n  },\n  sockets: {\n    applicationstatus: function (response) {\n      this.vibroenable = response.status;\n    },\n    Vibration: function (res) {\n      if (res.status == \"gift sended\") {\n        this.$q.notify({\n          message: \"Вы включили модели вибратор\",\n          color: \"pink\",\n        });\n      } else {\n        this.$q.notify({\n          message: \"Что-то пошло не так\",\n          color: \"red\",\n        });\n      }\n    },\n    cl_newMassage: function (response) {\n      let jsonobj = {\n        text: response.text,\n        date: response.date,\n        name: response.name,\n        models: response.models,\n        ismodel: response.ismodel,\n        avatar: response.avatar,\n        id: response.id,\n      };\n      this.datachat.push(jsonobj);\n      setTimeout(() => {\n        this.$refs.chatscroll.setScrollPosition(this.$refs.chatscroll.scrollSize);\n      }, 500);\n    },\n\n    cl_privateRoute(response) {\n      if (response.status == \"ready\") {\n        this.$q.notify({\n          color: \"pink-6\",\n          message: \"Модель согласилась на приват\",\n        });\n        this.$router.push({\n          path: \"private/\" + this.$route.params.modelid,\n        });\n      } else {\n        this.$q.notify({\n          color: \"pink-6\",\n          message: \"Модель отказала вам в привате\",\n        });\n      }\n    },\n    cl_getRouteMain: function (response) {\n      if ((response.private = \"N\")) {\n      }\n    },\n    cl_changestreamdata: function (response) {\n      console.log(response);\n      this.streamDesc = response.streamDesc; //описание стрима\n      this.tags = response.tags; // теги\n      this.target = response.target; // цель сбор средств\n      this.sum = response.sum; //сумма средств\n      this.sumPrivat = response.sumPrivat; // сумма привата\n      this.cMode = response.cMode; // разрешить подглядывания\n      this.botDesk = response.botDesk; // описание бота\n      this.botTime = response.botTime; // тайминг бога\n      this.modelavatar = response.model.avatar;\n    },\n    cl_getstreaminfo: function (response) {\n      this.streamDesc = response.streamDesc; //описание стрима\n      this.tags = response.tags; // теги\n      this.target = response.target; // цель сбор средств\n      this.sum = response.sum; //сумма средств\n      this.sumPrivat = response.sumPrivat; // сумма привата\n      this.cMode = response.cMode; // разрешить подглядывания\n      this.botDesk = response.botDesk; // описание бота\n      this.botTime = response.botTime; // тайминг бога\n    },\n    cl_getuseravatar: function (response) {\n      this.useravatar =\n        response.status === \"ok\"\n          ? response.avatar\n          : \"https://cdn.quasar.dev/img/boy-avatar.png\";\n    },\n  },\n  created() {\n    this.src = this._G.recUrl +\n          \"/stream/liveHD/model\" +\n          this.$route.params.modelid +\n          \"/index.m3u8\";\n          // stream default url to start \n    this.$socket.emit(\"s_changePage\", {\n      page: \"stream\",\n      model: this.$route.params.modelid,\n      userid: this.pcm.user.id,\n      token: this.pcm.user.tk,\n    });\n    var videol = this.$route.params.modelid;\n    this.$socket.emit(\"s_getstreaminfo\", {\n      token: this.pcm.user.tk,\n      modelid: videol,\n    });\n    this.$socket.emit(\"s_getuseravatar\", {\n      userid: this.pcm.user.id,\n    });\n\n    this.link =\n      this._G.recUrl +\n      \"/stream/liveHD/model\" +\n      this.$route.params.modelid +\n      \"/index.m3u8\";\n    this.chatplayer = this.link;\n    http({\n      method: \"post\",\n      url: \"/models_one\",\n      data: {\n        modelid: this.$route.params.modelid,\n      },\n    }).then((response3) => {\n      this.datamodel = response3.data;\n    });\n    http({\n      method: \"get\",\n      url: \"/balance\",\n      headers: {\n        \"x-access-token\": this.pcm.user.tk,\n      },\n    }).then((response2) => {\n      this.userToken = response2.data.balance;\n    });\n  },\n  beforeDestroy() {\n\n    this.$socket.emit(\"s_changePage\", {\n      page: \"exitstream\",\n      id: this.$route.params.modelid,\n    });\n  },\n  methods: {\n     switchSrc: function () {\n      this.videoHD = !this.videoHD;\n      this.src = this.videoHD\n        ? this._G.recUrl +\n          \"/stream/liveHD/model\" +\n          this.$route.params.modelid +\n          \"/index.m3u8\"\n        :  this._G.recUrl +\n          \"/stream/liveSD/model\" +\n          this.$route.params.modelid +\n          \"/index.m3u8\";\n    },\n    getdatediff(dte) {\n      let date2 = new Date(dte);\n      let date1 = new Date();\n      let diff = (unit) => date.getDateDiff(date1, date2, unit);\n      return {\n        month: diff(\"months\"),\n        day: diff(\"days\"),\n        hr: diff(\"hours\"),\n        min: diff(\"minutes\"),\n      };\n    },\n    test_lush(second) {\n      this.$socket.emit(\"Vibration\", {\n        token: this.pcm.user.tk,\n        modelid: this.$route.params.modelid,\n        amount: second,\n      });\n      this.vibroDialog = false;\n    },\n    SuccPrivate() {\n      this.$socket.emit(\"s_StartPrivate\", {\n        token: this.pcm.user.tk,\n        userid: this.pcm.user.id,\n        name: this.pcm.user.un,\n        modelid: this.$route.params.modelid,\n      });\n      this.privateStart = false;\n      this.$q.notify({\n        color: \"pink-6\",\n        message: \"Ожидаем ответа от модели\",\n      });\n    },\n    // playerInitialize() {\n    //   // this.player = videojs('streamVideo');\n    // },\n    // playerDispose() {\n    //   this.player.dispose();\n    // },\n    // playerPlay() {\n    //   this.player.play();\n    // },\n    // playerPause() {\n    //   this.player.pause();\n    // },\n    // playerSetSrc(url) {\n    //   this.player.src(url);\n    //   this.player.play();\n    // },\n    // playerSetVolume(float) {\n    //   this.player.volume(float);\n    // },\n    // playerSetPoster(url) {\n    //   this.player.poster(url);\n    // },\n    // playerSetTime(time) {\n    //   this.player.currentTime(time);\n    // },\n    // playerEventEnded() {\n    //   console.log('ended');\n    // },\n    // playerEventVolume() {\n    //   this.volume = this.player.volume();\n    // },\n    // playerEventError() {\n    //   console.log(this.playerGetError())\n    // },\n    // playerGetPaused() {\n    //   return this.player.paused();\n    // },\n    // playerGetTime() {\n    //   return this.player.currentTime();\n    // },\n    // playerGetError() {\n    //   return this.player.error().message;\n    // },\n    // playerSetupEvents() {\n    //   this.player.on('ended', function() {\n    //     var a = window.playerEvents.playerEventEnded();\n    //   });\n    //   this.player.on('volumechange', function() {\n    //     window.playerEvents.playerEventVolume();\n    //   });\n    //   this.player.on('error', function() {\n    //     window.playerEvents.playerEventError();\n    //   });\n    // },\n    giftTokenDialog() {\n      if (this.amountGift <= 0 || this.amountGift == null) {\n        this.$q.notify({\n          color: \"negative\",\n          message: \"Неверное количество токенов\",\n        });\n      } else {\n        http({\n          method: \"get\",\n          url: \"/donat\",\n          headers: {\n            \"x-access-token\": this.pcm.user.tk,\n            model: this.$route.params.modelid,\n            amount: this.amountGift,\n          },\n        }).then((response) => {\n          if (response.data.status == \"ok\") {\n            this.$q.notify({\n              color: \"green\",\n              message: \"Подарок отправлен\",\n            });\n            this.giftDialog = false;\n          } else {\n            this.$q.notify({\n              color: \"negative\",\n              message: \"Что-то пошло не так!\",\n            });\n          }\n        });\n      }\n    },\n    send_comment() {\n      if (\n        this.chat_send == null ||\n        this.chat_send == \"\" ||\n        this.chat_send == \" \" ||\n        !this.chat_send.trim()\n      ) {\n        this.$q.notify({\n          // ограничение на 3 или 2 буквы тут будут бесполезны из за особенности русского языка\n          color: \"pink-6\",\n          message: \"Сообщение пустое\",\n        });\n        return;\n      }\n      this.$socket.emit(\n        \"s_streamchatsend\",\n        {\n          username: this.pcm.user.un,\n          modelid: this.$route.params.modelid,\n          textmess: this.chat_send,\n          avatar: this.useravatar,\n          id: this.pcm.user.id,\n        },\n        (err) => console.log(\"message sended:\", err)\n      );\n      this.chat_send = null;\n      // var data = {\n      //   username: this.pcm.user.un,\n      //   modelid: this.$route.params.modelid,\n      //   textmess: this.chat_send\n      // };\n      // http({\n      //   method: \"post\",\n      //   url: \"/create_comments_on\",\n      //   headers: {\n      //     \"x-access-token\": this.pcm.user.tk\n      //   },\n      //   data: data\n      // }).then(response => {\n      //   this.chat_send = \"отправка сообщения\";\n      //   //////////////////////////\n      //   if (response.data.result == \"created\") {\n      //     http({\n      //       method: \"get\",\n      //       url: \"/search_comments\",\n      //       headers: {\n      //         modelid: this.$route.params.modelid\n      //       }\n      //     }).then(response2 => {\n      //       this.chat_send = null;\n      //       this.datachat = response2.data.data;\n      //     });\n      //   }\n      //   ///////////////////////////\n      // });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.overlay h1 {\n  text-align: center;\n  color: #fff;\n  font-size: 70px;\n  margin-top: 17%;\n}\n\n.purp {\n  color: #fe2c55;\n}\n</style>\n>\n","<template>\n  <q-page class=\"bg-white fullpage\" style=\"overflow: auto\">\n    <div class=\"fit fixed bg-black\" >\n      <!-- <video\n        id=\"videoElement\"\n        autoplay\n        muted\n        playsinline\n        class=\"full-width\"\n        style=\"height:33vh; width:100%;\"\n        webkit-playsinline\n        wmode=\"opaque\"\n        :src=\"link\"\n      ></video> -->\n      <!-- <video-player ref=\"streamplayer\" :options=\"videoOptions\" :configs=\"{ hls: true }\"></video-player> -->\n\n      <q-hls :src=\"src\" :wps=\"100\" :hps=\"100\" :c=\"false\"  class=\"h-vh-100 \" classes=\"video-fit\" />\n    </div>\n\n    <div class=\"row w-vw-100 h-vh-100 fixed-center\">\n      <div class=\"row w-vw-100\">\n        <div class=\"row w-hw-100 \">\n          <div class=\"row justify-between mt-vh-3 \">\n            <q-item clickable v-ripple class=\"w-100 text-white fixed-top-left\">\n              <q-item-section side>\n                <q-avatar round size=\"48px\">\n                  <img :src=\"modelavatar\" />\n                  <q-badge floating color=\"red\" label=\"live\" />\n                </q-avatar>\n              </q-item-section>\n              <q-item-section>\n                <q-item-label v-if=\"datamodel\"> {{ datamodel.modelname }}</q-item-label>\n                <q-item-label caption class=\"text-white\"\n                  >{{ streamDesc }} | {{ tags }}</q-item-label\n                >\n              </q-item-section>\n              <q-item-section side class=\"text-white\" v-if=\"datamodel\">\n                <q-chip @click=\"gotoprofile(datamodel)\">\n                  <q-avatar>@</q-avatar>\n                  {{ datamodel.UuserId.username }}\n                </q-chip>\n              </q-item-section>\n            </q-item>\n          </div>\n        </div>\n        <div class=\"row h-vh-70 w-vw-100 fixed-center\">\n          <q-scroll-area\n          v-touch:swipe.right=\"onright\"\n            ref=\"chatscroll\"\n            class=\"col row ml-vw-1 q-pa-none \"\n            :thumb-style=\"thumbStyle\"\n            :bar-style=\"barStyle\"\n           \n          >\n            <div\n              style=\"width: 95%\"\n              class=\"text-white\"\n              v-for=\"item in datachat\"\n              :key=\"item.date\"\n            >\n              <div class=\"q-ma-none row flexchat\" v-if=\"item.ismodel\">\n                <q-chip dense>\n                  <q-avatar color=\"red\" text-color=\"white\">\n                    <img :src=\"item.avatar\"\n                  /></q-avatar>\n                  {{ item.name }}:\n                </q-chip>\n                <p class=\"text-xl text-pink-6 q-ma-none q-ml-xs\">{{ item.text }}</p>\n              </div>\n              <div class=\"q-ma-none row flexchat\" v-else>\n                <q-chip dense>\n                  <q-avatar color=\"red\" text-color=\"white\"\n                    ><img :src=\"item.avatar\"\n                  /></q-avatar>\n                  {{ item.name }}:\n                </q-chip>\n                <p class=\"text-white text-xl q-ma-none q-ml-xs\">{{ item.text }}</p>\n              </div>\n            </div>\n          </q-scroll-area>\n        </div>\n        <div class=\"fixed-bottom  w-vw-100 row\">\n    \n          <q-input\n            v-on:keyup.enter=\"send_comment()\"\n            v-model=\"chat_send\"\n            placeholder=\"Ваше сообщение\"\n            borderless\n            input-class=\"text-body1 backy text-white q-my-md q-pl-md\"\n            class=\"sendfix col-10 q-my-xs q-ml-xs\"\n          >\n          <template v-slot:prepend>\n                      <q-fab\n        v-model=\"fabLeft\"\n        vertical-actions-align=\"left\"\n       color=\"black\"\n        class=\" text-black q-my-auto text-center \"\n        icon=\"keyboard_arrow_up\"\n        direction=\"up\"\n        \n      >\n        <q-fab-action label-position=\"right\" color=\"pink-6\"  @click=\"privateStart = true\" icon=\"vpn_lock\" label=\"Приват\" />\n        <q-fab-action label-position=\"right\" color=\"pink-3\"   @click=\"giftDialog = true\" icon=\"redeem\" label=\"Подарить токены\" />\n        <q-fab-action label-position=\"right\" :color=\"videoHD ? 'pink-3':'dark'\"  :label=\"videoHD?'стандартный':'низкое качество'\"  @click=\"switchSrc\" icon=\"hd\"/>\n      </q-fab>\n        </template>\n          </q-input>\n\n          <q-btn\n            color=\"green\"\n            class=\"btnsend q-my-auto q-mx-auto text-center\"\n            align=\"center\"\n            icon=\"mdi-send\"\n            outline\n            round\n            text-color=\"green\"\n            @click=\"send_comment()\"\n          >\n          </q-btn>\n        </div>\n      </div>\n    </div>\n    <q-dialog v-model=\"giftDialog\">\n      <q-card\n        class=\"text-white fit flex flex-center\"\n        style=\"background: rgba(254, 44, 85, 0.7)\"\n      >\n        <div class=\"justify-center row\">\n          <q-avatar class=\"col-12\" icon=\"card_giftcard\"></q-avatar>\n          <p class=\"q-px-xl q-mt-md q-mx-lg text-center col-10\" style=\"font-size: 2vw\">\n            Вы можете подарить не более {{ userToken }} токенов\n          </p>\n          <q-input\n            rounded\n            outlined\n            dense\n            dark\n            class=\"col-12 q-px-xl q-mt-md q-mx-lg text-white\"\n            v-model=\"amountGift\"\n            placeholder=\"Сумма токенов\"\n          />\n          <q-btn\n            class=\"text-red bg-white text-weight-bold col-4 q-mr-sm q-mt-xs\"\n            @click=\"giftTokenDialog()\"\n            style=\"border-radius: 30px\"\n            >Да</q-btn\n          >\n          <q-btn\n            class=\"text-weight-bold bg-grey text-white col-4 q-ml-sm q-mt-xs\"\n            style=\"border-radius: 30px\"\n            @click=\"giftDialog = false\"\n            >Нет</q-btn\n          >\n        </div>\n      </q-card>\n    </q-dialog>\n    <q-dialog v-model=\"privateStart\" v-if=\"userToken > sumPrivat\">\n      <q-card\n        class=\"text-white fit flex flex-center\"\n        style=\"background: rgba(254, 44, 85, 0.7)\"\n      >\n        <div class=\"justify-center row\">\n          <q-avatar class=\"col-12\" icon=\"videocam\"></q-avatar>\n          <p class=\"q-px-xl q-mt-md q-mx-lg text-center col-10\" style=\"font-size: 4vw\">\n            Внимание у вас {{ userToken }} токенов за приват модель просит\n            {{ sumPrivat }} в минуту. Вы хотите начать приват?\n          </p>\n          <q-btn\n            class=\"text-red bg-white text-weight-bold col-4 q-mr-sm q-mt-xs\"\n            @click=\"SuccPrivate()\"\n            style=\"border-radius: 30px\"\n            >Да</q-btn\n          >\n          <q-btn\n            class=\"text-weight-bold bg-grey text-white col-4 q-ml-sm q-mt-xs\"\n            style=\"border-radius: 30px\"\n            @click=\"privateStart = false\"\n            >Нет</q-btn\n          >\n        </div>\n      </q-card>\n    </q-dialog>\n    <q-dialog v-model=\"privateStart\" v-else>\n      <q-card\n        class=\"text-white fit flex flex-center\"\n        style=\"background: rgba(254, 44, 85, 0.7)\"\n      >\n        <div class=\"justify-center row\">\n          <q-avatar class=\"col-12\" icon=\"videocam\"></q-avatar>\n          <p class=\"q-px-xl q-mt-md q-mx-lg text-center col-10\" style=\"font-size: 4vw\">\n            У вас недостаточно токенов для привата модель просит\n            {{ sumPrivat }} токенов за минуту\n          </p>\n          <q-btn\n            class=\"text-weight-bold bg-grey text-white col-4 q-ml-sm q-mt-xs\"\n            style=\"border-radius: 30px\"\n            @click=\"privateStart = false\"\n            >ОК</q-btn\n          >\n        </div>\n      </q-card>\n    </q-dialog>\n  </q-page>\n</template>\n\n<script>\nimport http from \"../../http-common\";\n// import videoPlayer from \"../../components/VideoPlayer\";\n// import EasyPlayer from \"@easydarwin/easyplayer\";\nimport Hls from \"hls.js\";\nimport { LocalStorage } from \"quasar\";\nimport { log } from \"video.js\";\nimport { mapState } from 'vuex';\nexport default {\n  components: {\n    // VuePlyr,\n    // videojs,\n    // resolutionswitch,\n    // VideoPlayer\n    // contribhls,\n    // videyoutube,\n    // videojsvimeo,\n  },\n  data() {\n    return {\n      privateStart: false,\n      hls: null,\n      chat_send: null,\n      madels: 95,\n      sub: \"sub\",\n      report: false,\n      fabLeft:false,\n      muted: true,\n      link: null,\n      chatmess: null,\n      datamodel: null,\n      privat: false,\n      offline: false,\n      load: true,\n      giftDialog: false,\n      amountGift: null,\n      userToken: null,\n      streamDesc: null,\n      tags: null,\n      target: null,\n      sum: null,\n      sumPrivat: null,\n      cMode: false,\n      botDesk: null,\n      botTime: null,\n      modelavatar: \"https://cdn.quasar.dev/img/boy-avatar.png\",\n      chatplayer: null,\n      amount_bounty: null,\n      bal: 0,\n      bounty: false,\n      chat_send: null,\n      madels: 95,\n      sub: \"sub\",\n      checklive: false,\n      videoHD:true,\n      muted: true,\n      link: null,\n      datachat: [],\n      chatmess: null,\n      interval: null,\n      videol: null,\n      peoplesIn: 0,\n      thumbStyle: {\n        display: \"none\",\n      },\n      barStyle: {\n        display: \"none\",\n      },\n          src:\n            this._G.recUrl +\n            \"/stream/mobileHD/model\" +\n            this.$route.params.modelid +\n            \"/index.m3u8\",\n    };\n  },\n  // components: { EasyPlayer },\n  computed:{\n   ...mapState(['pcm'])\n  },\n  created: function () {\n    this.$nextTick(function () {\n      this.videol = this.$route.params.modelid;\n      this.$socket.emit(\"s_changePage\", {\n        page: \"stream\",\n        model: this.$route.params.modelid,\n        userid: this.pcm.user.un,\n        token: this.pcm.user.tk,\n      });\n      this.$socket.emit(\"s_getstreaminfo\", {\n        token: this.pcm.user.tk,\n        modelid: this.$route.params.modelid,\n      });\n      this.$socket.emit(\"s_getuseravatar\", {\n        userid: this.$route.params.modelid,\n      });\n      this.chatplayer = this.link;\n\n    //  var videoSrc = this.videoOptions.source.src;\n    //  const video = this.$refs.videoRef;\n    //   if (Hls.isSupported()) {\n    //     var hls = new Hls({\n    //       // debug: true,\n    //       enableWorker: true,\n    //       liveBackBufferLength: 900,\n    //       // widevineLicenseUrl: \"http://cwip-shaka-proxy.appspot.com/no_auth\",\n    //       //  emeEnabled: true,\n    //       levelLoadingMaxRetry: 100,\n    //       manifestLoadingMaxRetry: 200,\n    //       // abrMaxWithRealBitrate:true,\n    //       manifestLoadingRetryDelay: 100,\n    //       autoStartLoad: true,\n    //       // enableSoftwareAES:false,\n    //       appendErrorMaxRetry: 100,\n    //     });\n    //     hls.loadSource(videoSrc);\n    //     hls.attachMedia(video);\n    //     // hls.on(Hls.Events.MEDIA_ATTACHED, function() {\n    //     //  this.$refs.videoRef.play();\n    //     // });\n    //     hls.on(Hls.Events.MANIFEST_LOADED, function () {\n    //       video.play();\n    //       console.log(\"manifest loaded\");\n    //     });\n    //     var vm = this;\n    //     hls.on(Hls.Events.ERROR, function () {\n    //       console.log(window.location.pathname)\n    //       if(window.location.pathname === 'live'){\n    // vm.$q.notify({\n    //         type:'warning',\n    //         message:'error loading stream',\n    //         actions: [\n    //       { label: 'back', color: 'black', handler: () => { vm.$router.back() } }\n    //     ]\n    //       })\n    //       }\n      \n    //     });\n    //     // hls.config.abrMaxWithRealBitrate\n    //     //   hls.config.lowBufferWatchdogPeriod\n    //     //     hls.config.highBufferWatchdogPeriod\n    //     //       hls.config.nudgeOffset\n    //     //       hls.config.maxSeekHole\n    //     //       hls.config.capLevelToPlayerSize\n    //     //       hls.config.manifestLoadingMaxRetryTimeout\n    //     // hls.config.appendErrorMaxRetry\n    //     // Hls.Events.MANIFEST_LOADED\n    //     video.play();\n    //     console.log(Hls.Events.MANIFEST_LOADED);\n    //   }\n    //   // hls.js is not supported on platforms that do not have Media Source\n    //   // Extensions (MSE) enabled.\n    //   //\n    //   // When the browser has built-in HLS support (check using `canPlayType`),\n    //   // we can provide an HLS manifest (i.e. .m3u8 URL) directly to the video\n    //   // element through the `src` property. This is using the built-in support\n    //   // of the plain video element, without using hls.js.\n    //   //\n    //   // Note: it would be more normal to wait on the 'canplay' event below however\n    //   // on Safari (where you are most likely to find built-in HLS support) the\n    //   // video.src URL must be on the user-driven white-list before a 'canplay'\n    //   // event will be emitted; the last video event that can be reliably\n    //   // listened-for when the URL is not on the white-list is 'loadedmetadata'.\n    //   else if (this.$refs.videoRef.canPlayType(\"application/vnd.apple.mpegurl\")) {\n    //     video.src = videoSrc;\n\n    //     video.addEventListener(\"canplay\", function () {\n    //       console.log(\"meta data loaded with native support\");\n    //       video.play();\n    //     });\n    //   }\n      http({\n        method: \"get\",\n        url: \"/balance\",\n        headers: {\n          \"x-access-token\": this.pcm.user.tk,\n        },\n      }).then((response2) => {\n        this.bal = response2.data.balance;\n        this.userToken = response2.data.balance;\n      });\n\n    this.src = this._G.recUrl +\n          \"/stream/mobileHD/model\" +\n          this.$route.params.modelid +\n          \"/index.m3u8\";\n    });\n  },\n  sockets: {\n    cl_newMassage: function (response) {\n      let jsonobj = {\n        text: response.text,\n        date: response.date,\n        name: response.name,\n        models: response.models,\n        ismodel: response.ismodel,\n        avatar: response.avatar,\n      };\n      this.datachat.push(jsonobj);\n      setTimeout(() => {\n        this.$refs.chatscroll.setScrollPosition(this.$refs.chatscroll.scrollSize);\n      }, 500);\n    },\n\n    cl_privateRoute(response) {\n      if (response.status == \"ready\") {\n        this.$q.notify({\n          color: \"pink-6\",\n          message: \"Модель согласилась на приват\",\n        });\n        this.$router.push({\n          path: \"private/\" + this.$route.params.modelid,\n        });\n      } else {\n        this.$q.notify({\n          color: \"pink-6\",\n          message: \"Модель отказала вам в привате\",\n        });\n      }\n    },\n    cl_getRouteMain: function (response) {\n      if ((response.private = \"N\")) {\n      }\n    },\n    cl_changestreamdata: function (response) {\n      this.streamDesc = response.streamDesc; //описание стрима\n      this.tags = response.tags; // теги\n      this.target = response.target; // цель сбор средств\n      this.sum = response.sum; //сумма средств\n      this.sumPrivat = response.sumPrivat; // сумма привата\n      this.cMode = response.cMode; // разрешить подглядывания\n      this.botDesk = response.botDesk; // описание бота\n      this.botTime = response.botTime; // тайминг бога\n    },\n    cl_getstreaminfo: function (response) {\n      this.streamDesc = response.streamDesc; //описание стрима\n      this.tags = response.tags; // теги\n      this.target = response.target; // цель сбор средств\n      this.sum = response.sum; //сумма средств\n      this.sumPrivat = response.sumPrivat; // сумма привата\n      this.cMode = response.cMode; // разрешить подглядывания\n      this.botDesk = response.botDesk; // описание бота\n      this.botTime = response.botTime; // тайминг бога\n    },\n    cl_getuseravatar: function (response) {\n      this.modelavatar =\n        response.status == \"ok\"\n          ? response.avatar\n          : \"https://cdn.quasar.dev/img/boy-avatar.png\";\n    },\n    cl_preopleinlive: function (res) {\n      this.peoplesIn = res.number > 0 ? res.number - 1 : res.number;\n    },\n  },\n  beforeDestroy() {\n    this.link = null;\n    window.clearInterval(this.interval);\n  },\n\n  methods: {\n    onright:function(){\n     this.$router.back()\n    },\n    SuccPrivate() {\n      this.$socket.emit(\"s_StartPrivate\", {\n        token: this.pcm.user.tk,\n        userid: this.pcm.user.un,\n        name: this.pcm.user.un,\n        modelid: this.$route.params.modelid,\n      });\n      this.privateStart = false;\n      this.$q.notify({\n        color: \"pink-6\",\n        message: \"Ожидаем ответа от модели\",\n      });\n    },\n    send_comment() {\n      if (\n        this.chat_send == null ||\n        this.chat_send == \"\" ||\n        this.chat_send == \" \" ||\n        !this.chat_send.trim()\n      ) {\n        this.$q.notify({\n          // ограничение на 3 или 2 буквы тут будут бесполезны из за особенности русского языка\n          color: \"pink-6\",\n          message: \"Сообщение пустое\",\n        });\n        return;\n      }\n      this.$socket.emit(\n        \"s_streamchatsend\",\n        {\n          username: LocalStorage.getItem(\"username\"),\n          modelid: this.$route.params.modelid,\n          textmess: this.chat_send,\n          avatar: \"https://cdn.quasar.dev/img/boy-avatar.png\",\n        },\n        (err) => console.log(\"message sended:\", err)\n      );\n      this.chat_send = null;\n      // var data = {\n      //   username: LocalStorage.getItem(\"username\"),\n      //   modelid: this.$route.params.modelid,\n      //   textmess: this.chat_send\n      // };\n      // http({\n      //   method: \"post\",\n      //   url: \"/create_comments_on\",\n      //   headers: {\n      //     \"x-access-token\": this.pcm.user.tk\n      //   },\n      //   data: data\n      // }).then(response => {\n      //   this.chat_send = \"отправка сообщения\";\n      //   //////////////////////////\n      //   if (response.data.result == \"created\") {\n      //     http({\n      //       method: \"get\",\n      //       url: \"/search_comments\",\n      //       headers: {\n      //         modelid: this.$route.params.modelid\n      //       }\n      //     }).then(response2 => {\n      //       this.chat_send = null;\n      //       this.datachat = response2.data.data;\n      //     });\n      //   }\n      //   ///////////////////////////\n      // });\n    },\n     switchSrc: function () {\n      this.videoHD = !this.videoHD;\n      this.src = this.videoHD\n        ? this._G.recUrl +\n          \"/stream/mobileHD/model\" +\n          this.$route.params.modelid +\n          \"/index.m3u8\"\n        :  this._G.recUrl +\n          \"/stream/mobileSD/model\" +\n          this.$route.params.modelid +\n          \"/index.m3u8\";\n    },\n    play() {\n      this.$refs.videoRef.play();\n    },\n    list_comments() {\n      http({\n        method: \"get\",\n        url: \"/search_comments\",\n        headers: {\n          modelid: this.$route.params.modelid,\n        },\n      }).then((response2) => {\n        this.datachat = null;\n        this.datachat = response2.data.data;\n      });\n    },\n    gotoprofile(val){\n    console.log(val)\n    },\n    donat() {\n      http({\n        method: \"get\",\n        url: \"/donat\",\n        headers: {\n          \"x-access-token\": this.pcm.user.tk,\n          model: this.$route.params.modelid,\n          amount: this.amount_bounty,\n        },\n      }).then((response) => {\n        if (response.data.status == \"ok\") {\n          this.$q.notify(\"Подарок отправлен\");\n          this.bounty = false;\n        } else {\n          this.$q.notify(response.data.status);\n        }\n      });\n    },\n    reward() {\n      this.bounty = true;\n    },\n    giftTokenDialog(){\n      console.log('ok');\n    },\n    // send_comment() {\n    //   var data = {\n    //     username: LocalStorage.getItem(\"username\"),\n    //     modelid: this.$route.params.modelid,\n    //     textmess: this.chat_send\n    //   };\n    //   http({\n    //     method: \"post\",\n    //     url: \"/create_comments_on\",\n    //     headers: {\n    //       \"x-access-token\": this.pcm.user.tk\n    //     },\n    //     data: data\n    //   }).then(response => {\n    //     this.chat_send = \"отправка сообщения\";\n    //     //////////////////////////\n    //     if (response.data.result == \"created\") {\n    //       http({\n    //         method: \"get\",\n    //         url: \"/search_comments\",\n    //         headers: {\n    //           modelid: this.$route.params.modelid\n    //         }\n    //       }).then(response2 => {\n    //         this.chat_send = null;\n    //         this.datachat = response2.data;\n    //       });\n    //     }\n    //     ///////////////////////////\n    //   });\n    // },\n    unmuted() {\n      this.muted = false;\n      var video = document.getElementById(\"videoElement\");\n\n      video.muted = !video.muted;\n    },\n    muteddd() {\n      this.muted = true;\n      var video = document.getElementById(\"videoElement\");\n\n      video.muted = !video.muted;\n    },\n  },\n};\n</script>\n<style scoped>\n.vh100 {\n  height: 95vh;\n  width: 100vw;\n}\n.vh30 {\n  height: 33vh;\n}\n.mt10 {\n  margin-top: 20px;\n}\n.roz {\n  fill: #fe2c55;\n}\n.w50 {\n  width: 70%;\n}\n.w501 {\n  width: 30%;\n}\n.mt30 {\n  margin-top: 35vh;\n}\n.mtm30 {\n  margin-top: 27vh;\n}\n.mtm20 {\n  margin-top: -10vh;\n  margin-right: 80vh;\n  z-index: 200;\n}\n.fullscreen-bg {\n  overflow: hidden;\n  z-index: -100;\n  position: relative;\n  width: 120%;\n  height: 32vh;\n  padding-top: 45%;\n}\n\n.fullscreen-bg__video {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 32vh;\n}\n.overlay {\n  background: rgba(0, 0, 0, 0.6);\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 120%;\n  height: 32vh;\n  z-index: 4;\n}\n.overlay h1 {\n  text-align: center;\n  color: #fff;\n  font-size: 70px;\n  margin-top: 17%;\n}\n.mb50 {\n  margin-bottom: 9vh;\n  width: 80%;\n  height: 40px;\n}\n.mb501 {\n  margin-bottom: 9vh;\n  width: 20%;\n  margin-left: 80%;\n  height: 40px;\n  color: white;\n  border-radius: 0px;\n}\n\n.mbb50 {\n  width: 100%;\n  margin-bottom: 60px;\n}\n.purp {\n  color: #fe2c55;\n}\n</style>\n"]}