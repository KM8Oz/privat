{"version":3,"sources":["/var/www/html/privat/src/src/App.vue","/var/www/html/privat/src/components/src/components/profile_header.vue","/var/www/html/privat/src/components/src/components/hlsPlayer.vue","/var/www/html/privat/src/components/src/components/player.vue","/var/www/html/privat/src/components/side_mobile.vue","/var/www/html/privat/src/components/src/components/tiktok.vue"],"names":[],"mappings":"AAwBA,KACA,UAAA,CACA,SAAA,CACA,oBAAA,CACA,iBAAA,CACA,oBACA,CCaA,wBACA,eAAA,CACA,UAAA,CACA,YAAA,CACA,wDAAA,CACA,kBAAA,CACA,iBAAA,CACA,SAAA,CACA,0jCAAA,CAAA,kjCAAA,CACA,gBAGA,CAEA,mBACA,UAAA,CACA,WAAA,CACA,iBACA,CAEA,sBACA,iBAAA,CACA,OAAA,CACA,SAAA,CACA,wBAAA,CAAA,gBACA,CAEA,6BAEA,UAAA,CAOA,qCACA,CAEA,gEAXA,iBAAA,CAEA,gBAAA,CACA,iBAAA,CACA,UAAA,CACA,WAAA,CACA,OAAA,CACA,SAcA,CAVA,mCAEA,aAAA,CAOA,uBACA,CAEA,kBACA,iBAAA,CACA,sBAAA,CACA,WAAA,CACA,wDAAA,CACA,QACA,CACA,sBACA,aAAA,CACA,yBAAA,CAAA,iBAAA,CACA,2BAAA,CACA,qBAAA,CACA,eACA,CCqDA,gCACA,iBAAA,CACA,UAAA,CACA,WAAA,CACA,UACA,CACA,2BACA,iBAAA,CACA,gBACA,CAEA,yBACA,iBAAA,CACA,aAAA,CACA,QAAA,CACA,UAAA,CACA,cAAA,CACA,mBAAA,CACA,eAAA,CACA,SAAA,CACA,UAAA,CACA,iBAAA,CACA,wBAAA,CAGA,uBAAA,CAEA,2FACA,CACA,qCACA,yBACA,QAAA,CACA,wBACA,CACA,CAuBA,iCACA,GACA,8GACA,CACA,OAEA,8GACA,CACA,QAEA,8IACA,CACA,IACA,6IACA,CACA,IACA,2IACA,CACA,GACA,8GACA,CACA,CAWA,iCACA,GAEA,sBACA,CACA,GAEA,wBACA,CACA,CCnJA,OACA,oBAEA,CACA,SACA,aAAA,CACA,iBAAA,CACA,WAAA,CACA,YAAA,CACA,YACA,CCsBA,2BACA,oBAAA,CACA,WA9IA,CAgJA,gCACI,yBA7IJ,CC6DA,yBACA,iBAAA,CACA,UAAA,CACA,WAAA,CACA,kBACA,CAEA,uBACA,oBAAA,CACA,UAAA,CACA,WAAA,CACA,iBACA,CAEA,qBACA,iBAAA,CACA,oBAAA,CACA,qBAAA,CACA,UAAA,CACA,WAAA,CACA,UACA","file":"app.0eaf114c.css","sourcesContent":["<template>\n  <div  id=\"q-app\">\n    <router-view />\n  </div>\n</template>\n\n<script>\nimport {  Platform, Cookies} from 'quasar';\nimport { mapState } from 'vuex';\nexport default {\n  name: 'App',\n  created(){\n     this.$store.commit('pcm/start')\n     this.$store.dispatch('pcm/platform', Platform.is)\n     this.$socket.emit('appVideos',{token:Cookies.get('sspcm')?.sstk, size: this.pcm?.vidControls.number.max ||  20}, (response) => {\n      this.$store.dispatch('pcm/videos', response)\n    });\n  },\n  computed:{\n    ...mapState(['pcm'])\n  }\n}\n</script>\n<style>\n  .dot {\n    height: 5px;\n    width: 5px;\n    background-color: red;\n    border-radius: 50%;\n    display: inline-block;\n  }\n\n</style>\n","<template>\n    <div class=\"profile_conatiner\">\n        <div class=\"profile_header_wrapper\">\n            <q-btn flat icon=\"settings\" class=\"profile_header_settings_btn\" to=\"/profile/settings\" />\n            <div class=\"profile_header_names\">\n                <p class=\"oswald-regular profile_header-text1 text-black text-uppercase\">\n                    {{ name }}\n                </p>\n                <p class=\"oswald-regular text-body text-black\">\n                    @{{ username }}\n                </p>\n            </div>\n        </div>\n        <q-avatar size=\"100px\" class=\"q-profile_avatar\">\n            <img :src=\"avatar\" />\n        </q-avatar>\n    </div>\n</template>\n<script>\nexport default {\n    props: {\n        avatar: {\n            type: String\n        },\n        balance: {\n            type: Number\n        },\n        username: {\n            type: String\n        },\n        name: {\n            type: String\n        }\n    },\n    data() {\n        return {\n\n        }\n    },\n}\n</script>\n\n<style lang=\"css\">\n.profile_header_wrapper {\n    max-height: 100%;\n    width: 100%;\n    height: 200px;\n    background-image: linear-gradient(120deg, #fdfbfb 0%, #ebedee 100%);\n    border-radius: 20px;\n    position: relative;\n    z-index: 0;\n    clip-path: polygon(100% 0%, 0% 0%, 0% 65%, 1% 64.95%, 2% 64.8%, 3% 64.6%, 4% 64.3%, 5% 63.9%, 6% 63.45%, 7% 62.9%, 8% 62.25%, 9% 61.55%, 10% 60.8%, 11% 59.95%, 12% 59.05%, 13% 58.1%, 14% 57.1%, 15% 56.05%, 16% 55%, 17% 53.9%, 18% 52.8%, 19% 51.65%, 20% 50.5%, 21% 49.35%, 22% 48.2%, 23% 47.05%, 24% 45.9%, 25% 44.8%, 26% 43.75%, 27% 42.75%, 28% 41.75%, 29% 40.8%, 30% 39.9%, 31% 39.1%, 32% 38.35%, 33% 37.65%, 34% 37.05%, 35% 36.5%, 36% 36.05%, 37% 35.65%, 38% 35.35%, 39% 35.15%, 40% 35.05%, 41% 35%, 42% 35.05%, 43% 35.2%, 44% 35.45%, 45% 35.75%, 46% 36.15%, 47% 36.65%, 48% 37.2%, 49% 37.85%, 50% 38.55%, 51% 39.35%, 52% 40.2%, 53% 41.1%, 54% 42.05%, 55% 43.05%, 56% 44.1%, 57% 45.15%, 58% 46.3%, 59% 47.4%, 60% 48.55%, 61% 49.7%, 62% 50.85%, 63% 52%, 64% 53.15%, 65% 54.25%, 66% 55.35%, 67% 56.4%, 68% 57.45%, 69% 58.4%, 70% 59.35%, 71% 60.2%, 72% 61.05%, 73% 61.8%, 74% 62.45%, 75% 63.05%, 76% 63.6%, 77% 64.05%, 78% 64.4%, 79% 64.7%, 80% 64.85%, 81% 65%, 82% 65%, 83% 64.9%, 84% 64.75%, 85% 64.5%, 86% 64.2%, 87% 63.75%, 88% 63.25%, 89% 62.7%, 90% 62.05%, 91% 61.3%, 92% 60.5%, 93% 59.65%, 94% 58.75%, 95% 57.8%, 96% 56.8%, 97% 55.75%, 98% 54.65%, 99% 53.55%, 100% 52.4%);\n    overflow: visible;\n    /* clip-path: circle(30.4% at 50% 11%); */\n    /* mask-clip: content-box; */\n}\n\n.profile_conatiner {\n    width: 100%;\n    height: 100%;\n    position: relative;\n}\n\n.profile_header_names {\n    position: absolute;\n    top: 3px;\n    left: 10px;\n    user-select: none;\n}\n\n.profile_header_settings_btn {\n    position: absolute;\n    color: black;\n    border: 2px solid;\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    top: 3px;\n    right: 3px;\n    transition: transform 0.8s ease-in-out;\n}\n\n.profile_header_settings_btn:hover {\n    position: absolute;\n    color: rgb(116, 116, 116);\n    border: 2px solid;\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    top: 3px;\n    right: 3px;\n    transform: rotate(60deg);\n}\n\n.q-profile_avatar {\n    position: absolute;\n    -webkit-user-drag: none;\n    bottom: 20px;\n    background-image: linear-gradient(120deg, #fdfbfb 0%, #ebedee 100%);\n    left: 30%;\n}\n.profile_header-text1{\n    font: optional;\n    font-kerning: auto;\n    font-optical-sizing: inherit;\n    font-size-adjust: none;\n    font-size: 1.3em;\n}\n</style>","<template>\n  <div class=\"video-wrapper\" >\n    <div v-if=\"loading\" class=\"loader\">Loading...</div>\n    <video\n    class=\"videoref\"\n    id=\"hls-video\"\n      ref=\"videoref\"\n      :class=\"classes\"\n    \n     \n    >\n     <source  data-fluid-hd\n                     :src=\"vsrc\" title=\"HD\" type='application/x-mpegURL'/>\n                      <source  data-fluid-hd\n                     :src=\"vsdsrc\" title=\"SD\" type='application/x-mpegURL'/>\n    </video>\n  </div>\n</template>\n\n<script>\nimport Hls from \"hls.js\";\nimport fluidPlayer from 'fluid-player';\nexport default {\n  name: \"HlsPlayer\",\n  props: {\n    src: String,\n    w: Number,\n    h: Number,\n    wps: Number,\n    hps: Number,\n    c: Boolean,\n    classes:String\n  },\n  data: () => ({\n    vsrc: null,\n    \n    ww: null,\n    wh: null,\n     player: null,\n    loading:false\n  }),\n  computed: {\n    vsdsrc(){return this.vsrc.replace(\"HD\",\"SD\")},\n    video() {\n      return this.$refs.videoref;\n    }\n  },\n  beforeUpdate: () => {\n    //  this.hls.destroy()\n  },\n  created() {\n    this.vsrc = this.src;\n   \n  },\n  watch: {\n    src: function (val) {\n      // this.hls.detachMedia(this.video);\n      this.vsrc = val;\n     // this.video.srcObject = null;\n      // this.hls.attachMedia(this.video);\n      // this.hls.loadSource(val);\n      // this.$nextTick(() => {\n      //   // console.log(this.video);\n      //   this.video.addEventListener(\"canplay\", (event) => {\n      //     this.video.play();\n      //   });\n      // });\n      this.player.play()\n    },\n  },\n  mounted() {\n     this.reportWindowSize();\n    this.$nextTick(() => {\n      window.onresize = this.reportWindowSize;\n    });\n    this.player = fluidPlayer(this.video,{\n        layoutControls: {\n\n           primaryColor: \"#fe2c55\",\n            fillToContainer: true,\n             autoPlay: true,\n             preload: \"auto\" ,\n             doubleclickFullscreen: false,\n            posterImage: 'https://rec.camsguns.com/tutos/loading-1.jpg',\n            allowTheatre:           false,\n            logo: {\n                imageUrl:           \"https://rec.camsguns.com/tutos/logo-trans.png\",\n                position:           'top right',\n                clickUrl:           null,\n                opacity:            1\n            },\n        }\n    });\n    this.startVideo();\n  //  this.joinVideoHls();\n   \n//           this.video.addEventListener('waiting', (event) => {\n//   console.log('Video is waiting for more data.');\n// });\n  },\n  methods: {\n    ps(s,f){\n    return ((s/100 )* f).toFixed()\n    },\n    reportWindowSize() {\n      \n      this.wh = window.innerHeight.toFixed();\n      this.ww = window.innerWidth.toFixed();\n      //console.log(this.video);\n      this.video.style.heigh = this.ps(this.hps,this.wh);\n       this.video.style.width = this.ps(this.wps,this.ww);\n    },\n    startVideo() {\n      // this.hls.attachMedia(this.video);\n      // this.hls.loadSource(this.src);\n     this.player.play()\n    },\n    joinVideoHls() {\n      // this.hls.on(Hls.Events.MEDIA_ATTACHED, function () {\n      //   console.log(\"video and hls.js are now bound together !\");\n      // });\n      // this.hls.on(Hls.Events.FRAG_LOADING, function () {\n      //  this.loading = true\n      // });\n      // this.hls.on(Hls.Events.FRAG_LOADED, function () {\n      //  this.loading = false\n      // });\n      // let vm = this\n      // this.hls.on(Hls.Events.ERROR, function (event, data) {\n      //   if (data.fatal) {\n      //     switch (data.type) {\n      //       case Hls.ErrorTypes.NETWORK_ERROR:\n      //         // try to recover network error\n      //         console.log(\"fatal network error encountered, try to recover\");\n      //         vm.hls.startLoad();\n      //         break;\n      //       case Hls.ErrorTypes.MEDIA_ERROR:\n      //         console.log(\"fatal media error encountered, try to recover\");\n      //         vm.hls.recoverMediaError();\n      //         break;\n      //       default:\n      //         // cannot recover\n      //         vm.hls.destroy();\n      //         break;\n      //     }\n      //   }\n      // });\n    },\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n   @import \"~fluid-player/src/css/fluidplayer.css\";\n\n    div.fluid-component, div.fluid-component > video {\n        /* width: 100% !important;\n        height: 100% !important; */\n    }\n.video-wrapper{\nposition: relative;\nwidth: 100%;\nheight: 100%;\nmargin: 0 0;\n}\n.videoref{\nposition: relative;\nobject-fit: cover;\n}\n\n.loader {\n  position: absolute;\n  color: #e45252;\n  left: 43%;\n  z-index: 11;\n  font-size: 90px;\n  text-indent: -9999em;\n  overflow: hidden;\n  width: 1em;\n  height: 1em;\n  border-radius: 50%;\n  margin: 25% auto 0px auto;\n  -webkit-transform: translateZ(0);\n  -ms-transform: translateZ(0);\n  transform: translateZ(0);\n  -webkit-animation: load6 1.7s infinite ease, round 1.7s infinite ease;\n  animation: load6 1.7s infinite ease, round 1.7s infinite ease;\n}\n@media screen and (min-width: 1000px) {\n .loader {\n  left: 43%;\n  margin: 15% auto 0px auto;\n}\n}\n@-webkit-keyframes load6 {\n  0% {\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\n  }\n  5%,\n  95% {\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\n  }\n  10%,\n  59% {\n    box-shadow: 0 -0.83em 0 -0.4em, -0.087em -0.825em 0 -0.42em, -0.173em -0.812em 0 -0.44em, -0.256em -0.789em 0 -0.46em, -0.297em -0.775em 0 -0.477em;\n  }\n  20% {\n    box-shadow: 0 -0.83em 0 -0.4em, -0.338em -0.758em 0 -0.42em, -0.555em -0.617em 0 -0.44em, -0.671em -0.488em 0 -0.46em, -0.749em -0.34em 0 -0.477em;\n  }\n  38% {\n    box-shadow: 0 -0.83em 0 -0.4em, -0.377em -0.74em 0 -0.42em, -0.645em -0.522em 0 -0.44em, -0.775em -0.297em 0 -0.46em, -0.82em -0.09em 0 -0.477em;\n  }\n  100% {\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\n  }\n}\n@keyframes load6 {\n  0% {\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\n  }\n  5%,\n  95% {\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\n  }\n  10%,\n  59% {\n    box-shadow: 0 -0.83em 0 -0.4em, -0.087em -0.825em 0 -0.42em, -0.173em -0.812em 0 -0.44em, -0.256em -0.789em 0 -0.46em, -0.297em -0.775em 0 -0.477em;\n  }\n  20% {\n    box-shadow: 0 -0.83em 0 -0.4em, -0.338em -0.758em 0 -0.42em, -0.555em -0.617em 0 -0.44em, -0.671em -0.488em 0 -0.46em, -0.749em -0.34em 0 -0.477em;\n  }\n  38% {\n    box-shadow: 0 -0.83em 0 -0.4em, -0.377em -0.74em 0 -0.42em, -0.645em -0.522em 0 -0.44em, -0.775em -0.297em 0 -0.46em, -0.82em -0.09em 0 -0.477em;\n  }\n  100% {\n    box-shadow: 0 -0.83em 0 -0.4em, 0 -0.83em 0 -0.42em, 0 -0.83em 0 -0.44em, 0 -0.83em 0 -0.46em, 0 -0.83em 0 -0.477em;\n  }\n}\n@-webkit-keyframes round {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n@keyframes round {\n  0% {\n    -webkit-transform: rotate(0deg);\n    transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n    transform: rotate(360deg);\n  }\n}\n\n</style>\n","<template>\n<div class=\"wrapper\" ref=\"videow\">\n      <video\n            class=\"video-mainMobile\"\n      playsInline\n      controlsList=\"notimeline noremoteplayback nodownload nofullscreen noremoteplayback\"\n      :controls=\"false\"\n      :src=\"src\"\n      :poster=\"poster\"\n\n      :muted=\"muted\"\n      :id=\"id\"\n      ref=\"video\"\n    >\n        \n    </video>\n    <div class=\"playpause loader1\" ref=\"playbtn\" ></div>\n     <svg\n      width=\"512\"\n      height=\"512\"\n      viewBox=\"0 0 512 512\"\n      ref=\"playing\"\n      @click=\"togglePlay\"\n      \n    >\n      <path d=\"M152.443 136.417l207.114 119.573-207.114 119.593z\" fill=\"#fff\" />\n    </svg>\n</div>\n</template>\n<script>\nexport default {\n    name:\"Player\",\n  props: {\n    src: String,\n    poster: String,\n    id:String,\n    muted:Boolean,\n    slide: Boolean\n  },\n  data:()=>({\n    playing:false  \n  }),\n  computed:{\n  btn:function(){\n      return this.$refs.playbtn;\n  },\n   btn2:function(){\n      return this.$refs.playing;\n  },\n  video:function(){\n      return this.$refs.videow;\n  }\n  },\n  methods:{\ntogglePlay:function(){\n  this.$refs.video.play();\n  this.btn2.style.display = 'none' \n}\n  },\n  mounted:function(){\n      let vm = this;\n      this.btn.style.display = 'none' ;\n        this.btn2.style.display = 'none' \n     // vm.$refs.video.playing ? this.btn.style.display = 'none' : this.btn.style.display = 'block'\n     // console.log(this.$refs.playbtn);\n     this.video.addEventListener('playing',()=>{\n         this.btn.style.display = 'none'\n         this.btn2.style.display = 'none' \n         console.log('playing');\n     })\n     this.video.addEventListener('loadeddata',()=>{\n         this.btn.style.display = 'none'\n        // this.btn2.style.display = 'none' \n     })\n      this.video.addEventListener('waiting',()=>{\n          this.playing = false;\n     })\n         this.video.addEventListener('abort',()=>{\n          this.playing = false;\n          this.btn.style.display = 'none'\n         // this.btn2.style.display = 'none' \n     })\n          this.video.addEventListener('error',()=>{\n          this.playing = false;\n          this.btn.style.display = 'none'\n     })\n          this.video.addEventListener('suspend',()=>{\n          this.playing = false;\n     })\n       this.video.addEventListener('play',()=>{\n          this.playing = false;\n          this.btn.style.display = 'none'\n         // this.btn2.style.display = 'none' \n     })\n        this.video.addEventListener('pause',()=>{\n          this.playing = false;\n           this.btn.style.display = 'block'\n     })\n    \n        this.video.addEventListener('click',()=>{\n        //console.log(this.btn.after());\n          this.playing ? (vm.$refs.video.pause(), this.playing = false , this.btn.style.display = 'block') :(vm.$refs.video.play(), this.playing = true , this.btn.style.display = 'none');\n      })\n  },\n  updated:function(){\n    this.btn.style.display = 'none' ;\n       // this.btn2.style.display = 'none'  \n  }\n}\n</script>\n<style lang=\"css\">\n.video {\n  aspect-ratio: 348/530;\n\n}\n.wrapper{\n    display:block;\n    position:relative;\n    width:100vw;\n    height: 100vh;\n    z-index:9999\n}\n\n/* svg {\n  position: absolute;\n     top: calc(47% - 35px);\n    left: calc(48% - 35px);\n  width: 90px;\n  height: 90px;\n  z-index: 10;\n  filter: drop-shadow(0px 0px 1px black);\n\n} */\n</style>","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.scroller{\nwidth: 100% !important;\nheight: 95vh;\n}\n.q-placeholder {\n    padding-top: 4px !important;\n}\n\n","<template>\n  <div class=\"tiktok\">\n    <video :src=\"src\" ref=\"video\" :muted=\"muted\"  :id=\"id\" :poster=\"poster\" />\n    <svg\n      width=\"512\"\n      height=\"512\"\n      viewBox=\"0 0 512 512\"\n      @click=\"togglePlay\"\n      \n      v-show=\"!state.playing\"\n    >\n      <path d=\"M152.443 136.417l207.114 119.573-207.114 119.593z\" fill=\"#fff\" />\n    </svg>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"tiktok\",\n  props: {\n    src: String,\n    muted:Boolean,\n    poster: String,\n    id:String,\n  },\n  data:()=>({ \n      play,\n      pause,\n      togglePlay,\n      state:{\n        playing:false\n      },\n\n  }),\n  mounted:function(){\n   // console.log(this.$refs);\n    let vm = this\n  this.$refs.video?.addEventListener('playing',()=>{\n         vm.state.playing = false;\n     })\n      this.$refs.video?.addEventListener('click',()=>{\n         vm.state.playing ? vm.pause(): vm.play();\n     })\n  },\n  methods:{\n     play : () => {\n      this.$refs.video?.play();\n      this.state.playing = true;\n    },\n\n     pause : () => {\n      this.$refs.video?.pause();\n      this.state.playing = false;\n    },\n\n   togglePlay : () => {\n  //   console.log(e);\n      if (this.state.playing) {\n        this.pause();\n      } else {\n        this.play();\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.tiktok {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n}\n\nvideo {\n  aspect-ratio: 348/520;\n  width: 100%;\n  height: auto;\n  position: relative;\n}\n\nsvg {\n  position: absolute;\n  top: calc(50% - 35px);\n  left: calc(50% - 35px);\n  width: 90px;\n  height: 90px;\n  z-index: 10;\n}\n</style>\n"]}