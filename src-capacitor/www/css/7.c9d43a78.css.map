{"version":3,"sources":["/var/www/html/privat/src/pages/desktop/src/pages/desktop/tran.vue","/var/www/html/privat/src/pages/src/pages/live.vue"],"names":[],"mappings":"AA6GA,wBACA,WAAA,CACA,UACA,CACA,uBACA,WAAA,CACA,UACA,CACA,wBACA,gBAAA,CACA,WACA,CACA,wBACA,YACA,CACA,uBACA,iBACA,CACA,sBACA,gBACA,CACA,wBACA,YACA,CACA,wBACA,WACA,CClGA,wBACA,WAAA,CACA,UACA,CACA,uBACA,WAAA,CACA,UACA,CACA,wBACA,gBAAA,CACA,WACA,CACA,wBACA,YACA,CACA,uBACA,iBACA,CACA,sBACA,gBACA,CACA,wBACA,YACA,CACA,wBACA,WACA","file":"7.c9d43a78.css","sourcesContent":["<template>\n  <q-page :class=\"`${pcm.controls.dark? 'bg-dark text-white':'bg-white text-black'}`\">\n    <div class=\"row\">\n        <div\n      :class=\"width > 1200 ? 'col-lg-2 col-md-3 mt-vh-4' : 'col-lg-2 col-xs-1 mt-vh-2'\"\n    >\n      <q-followings v-model=\"tabVideos\" :index=\"lastindex\" @change=\"reRender()\" />\n    </div>\n    <div class=\"col-lg-9 col-md-9 row\">\n        <div class=\"row w-100\">\n      <q-toolbar class=\" text-white rounded-borders\">\n        <q-space />\n        <q-input dark borderless v-model=\"searchQuery\" placeholder=\"model name\" :input-class=\"pcm.controls.dark ? 'text-center text-uppercase text-subtitle2 text-weight-light': 'text-dark text-center text-uppercase text-subtitle2 text-weight-light'\" class=\"q-ml-md\">\n          <template v-slot:append>\n            <q-icon v-if=\"searchQuery === ''\" name=\"search\" :color=\"pcm.controls.dark ? 'white':'dark'\"/>\n            <q-icon v-else name=\"clear\" class=\"cursor-pointer\" @click=\"text = ''\" />\n          </template>\n        </q-input>\n      </q-toolbar>\n    </div>\n      <div class=\"fit row q-pd-xs q-pr-xs q-ma-xs\" >\n        <!-- <router-link :to=\"'/'+model.link\">\n          <q-card class=\"my-card\">\n            <q-img :src=\"img(model.screen)\" basic>\n              <div class=\"absolute-bottom text-subtitle2 text-center\">@{{model.username}}</div>\n            </q-img>\n          </q-card>\n        </router-link> -->\n        <div v-if=\"models.length === 0\" class=\"self-center banner-no-streams  oswald-bold q-ma-auto\">\n         некого в эфире <q-icon name=\"record\" class=\"q-mx-md\"></q-icon>\n        </div>\n        <q-stream class=\"col-3\"  v-for=\"(model,index) in models\" :key=\"index\" :img=\"img(model.screen)\" :name=\"model.username\" :time=\"model.otherData.updatedAt\" :link=\"'/'+model.link\"/>\n      </div>\n      </div>\n      \n    </div>\n  </q-page>\n</template>\n\n<script>\nimport http from \"../../http-common\";\nimport { LocalStorage } from 'quasar';\nimport { mapState } from 'vuex';\n\nexport default {\n  data() {\n    return {\n      models: [],\n      //lopper:null,\n      tabVideos:null,\n      lastindex:0,\n      steamShow:true,\n      width: window.innerWidth,\n      searchQuery:\"\",\n      text:\"\"\n    };\n  },\n  watch:{\n    searchQuery: function(val){\n      this.girlsVideosBack = this.models;\n     // console.log(val)\n      if(val){\n         this.models = this.models.filter(e=>e.username.search(val) !== -1 )\n     //  console.log(this.girlsVideos.filter(e=>e.username.search(val) !== -1 ))\n      } else {\n      this.models = this.girlsVideosBack ; \n      }\n    \n    }\n  },\n  computed:{\n   ...mapState(['pcm'])\n  },\n  sockets:{\n        applicationstatus: function(data){\n           console.log(data);\n        },\n        online: function(res){\n          let vm = this;\n           this.steamShow = false;\n           this.models = res;\n           this.$root.$emit(\"refreshscreens\", {status:!!res})\n            //  res.length > 0 ? res.map(e=>vm.$root.on(`${e.screen}`) ): null;\n           this.steamShow = true;\n        }\n  },\n  beforeDestroy(){\n //clearInterval(this.lopper)\n  },\n  created() {\n    // http({\n    //   method: \"get\",\n    //   url: \"/models_online\",\n    //   headers: {\n    //     \"x-access-token\": this.pcm.user.tk\n    //   }\n    // }).then(response => {\n    //   this.models = response.data;\n    // });\n\n  },\n  methods: {\n    img(img) {\n      return 'https://'+img;\n    }\n  }\n};\n</script>\n<style scoped>\n.vh100 {\n  height: 90vh;\n  width: 100%;\n}\n.vh40 {\n  height: 20vh;\n  width: 100%;\n}\n.mpb50 {\n  padding-top: 20vh;\n  height: 40vh;\n}\n.zi200 {\n  z-index: -200;\n}\n.bott {\n  margin-bottom: 0px;\n}\n.mb0 {\n  padding-top: 30vh;\n}\n.vh100 {\n  height: 100vh;\n}\n.zi200 {\n  z-index: 200;\n}\n</style\n>>\n","<template>\n  <q-page class=\"bg-white\">\n      <div class=\"mobile-only vh100\" v-if=\"$q.platform.is.mobile\">\n      <mobile></mobile>\n    </div>\n\n    <div class=\"desktop-only\" v-if=\"$q.platform.is.desktop\">\n      <desktop></desktop>\n    </div>\n  </q-page>\n</template>\n\n<script>\nimport Desktop from \"./desktop/tran.vue\";\nimport Mobile from \"./mobile/tran.vue\";\nimport { LocalStorage } from 'quasar';\nimport { mapState } from 'vuex';\n\nexport default {\n  components: {\n    desktop: Desktop,\n    mobile: Mobile\n  },\n  beforeMount(){\n    if(!this.pcm.auth){\n     this.$router.push('/')\n    }\n  },\n  data() {\n    return {};\n  },\n  computed:{\n   ...mapState(['pcm'])\n  }\n};\n</script>\n<style scoped>\n.vh100 {\n  height: 90vh;\n  width: 100%;\n}\n.vh40 {\n  height: 20vh;\n  width: 100%;\n}\n.mpb50 {\n  padding-top: 20vh;\n  height: 40vh;\n}\n.zi200 {\n  z-index: -200;\n}\n.bott {\n  margin-bottom: 0px;\n}\n.mb0 {\n  padding-top: 30vh;\n}\n.vh100 {\n  height: 100vh;\n}\n.zi200 {\n  z-index: 200;\n}\n</style\n>>\n"]}