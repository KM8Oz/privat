{"version":3,"sources":["/var/www/html/privat/src/pages/mobile/src/pages/mobile/settings.vue","/var/www/html/privat/src/pages/src/pages/settings.vue"],"names":[],"mappings":"AAs6BA,UACA,eAAA,CACA,wBAAA,CACA,qBAAA,CACA,iBACA,CACA,QACA,WACA,CACA,MACA,UACA,CCl5BA,MACA,eACA","file":"5.9fabc34f.css","sourcesContent":["<template>\n  <q-layout class=\"bg-white profileminfix\">\n    <q-toolbar class=\"text-black q-gutter-xs\">\n       <q-btn flat icon=\"arrow_back\" size=\"2vh\" @click=\"routeback()\" />\n      <q-toolbar-title class=\"text-center text-30\">{{thisModel.name}}</q-toolbar-title>\n\n      <q-fab   icon=\"more_horiz\" direction=\"down\" vertical-actions-align=\"right\" >\n        <q-fab-action color=\"pink-3\" class=\"w-fav\" outline text-color=\"black\" @click=\"logout()\" label=\"Выйти\" icon=\"power_settings_new\" />\n      </q-fab>\n    </q-toolbar>\n    <q-separator />\n      <div v-if=\"!auth\" class=\"flex justify-center q-mt-xl text-black col\">\n        <h5></h5>\n      </div>\n     <div v-if=\"!auth\" class=\"flex justify-center q-mt-xl text-black col\">\n        <h5></h5>\n      </div>\n      <div\n        v-else\n        class=\"col-lg-7 col-md-5 mt-vh-4 d-flex justify-content-center fullpageMT\"\n      >\n        <!--настройки-->\n        <q-scroll-area\n          :thumb-style=\"thumbStyle\"\n          :bar-style=\"barStyle\"\n          class=\"w-100 h-100 q-mx-md\"\n        >\n          <div class=\"row\">\n            <q-avatar size=\"15vh\" class=\"disabledivinavatar\" v-if=\"isModel\">\n              <q-img\n                v-if=\"ava == null\"\n                class=\"q-pa-none\"\n                :src=\"thisModel.avatars\"\n              >\n                <q-file\n                  @input=\"getImgBase64()\"\n                  v-model=\"ava\"\n                  accept=\".jpg, image/*\"\n                  outlined\n                  class=\"w-100 h-100 q-pa-none h-auto-fix\"\n                >\n                </q-file>\n              </q-img>\n              <q-img v-else class=\"q-pa-none\" :src=\"base64ava\">\n                <q-file\n                  @input=\"getImgBase64()\"\n                  v-model=\"ava\"\n                  accept=\".jpg, image/*\"\n                  outlined\n                  class=\"w-100 h-100 q-pa-none h-auto-fix\"\n                >\n                </q-file>\n              </q-img>\n            </q-avatar>\n            <q-btn\n              v-else\n              rounded\n              class=\"roundetnorm\"\n              @click=\"getAvatarsStandart()\"\n            >\n              <q-avatar size=\"15vh\" class=\"disabledivinavatar\">\n                <q-img\n                  v-if=\"newava == null\"\n                  class=\"q-pa-none\"\n                  :src=\"thisModel.avatars\"\n                >\n                </q-img>\n                <q-img v-else class=\"q-pa-none\" :src=\"newava\"> </q-img>\n              </q-avatar>\n            </q-btn>\n            <div class=\"row h-mc mt-vh-2 flex-1\">\n              <div class=\"col q-mb-none ml-vw-1\">\n                <div class=\"col-12 row\">\n                  <p class=\"text-black h-mc text-weight-bold text-30 q-ma-none\">\n                    {{ thisModel.name }}\n                  </p>\n                </div>\n                <p class=\"text-black h-mc text-comment-18 q-ma-none\">\n                  @{{ username }}\n                </p>\n              </div>\n              <!-- <q-btn rounded no-caps class=\"q-mt-sm\" dense color=\"pink-13\">\n                <p class=\"text-white q-mx-sm q-mb-none\">Подписаться</p>\n              </q-btn> -->\n            </div>\n            <!-- @click=\"\" -->\n          </div>\n          <div class=\"mt-vh-2\">\n            <p class=\"text-fxl text-weight-bold text-black\">Имя</p>\n            <!-- <p class=\"text-comment-14  text-graydg q-mb-none\">\n                        {{ thisModel.name }}\n                    </p> -->\n            <q-item tag=\"label\" v-ripple class=\"mt-vh-2 q-pl-none\">\n              <q-item-section avatar>\n                <q-btn\n                  flat\n                  icon=\"create\"\n                  color=\"pink-6\"\n                  class=\"text-black h-mc ml-auto\"\n                  @click=\"\n                    dialogmain = true;\n                    resetName = true;\n                  \"\n                />\n              </q-item-section>\n              <q-item-section>\n                <q-item-label\n                  title=\"Разрешить подглядывания\"\n                  class=\"text-body1 text-weight-regular gray-1337\"\n                >\n                  {{ thisModel.name }}</q-item-label\n                >\n              </q-item-section>\n            </q-item>\n            <!-- <q-btn class=\"fixbtn\" unelevated flat color=\"black\" :glossy=\"false\" :ripple=\"false\" @click=\"\n                dialogmain = true;\n                resetName = true;\n              \">\n                        <p class=\"text-pink-dg text-comment-14 q-ma-none text-initial\">\n                            Изменить имя\n                        </p>\n                    </q-btn> -->\n          </div>\n\n          <div class=\"mt-vh-2\">\n            <p class=\"text-fxl text-weight-bold text-black\">Имя Пользователя</p>\n            <q-item tag=\"label\" v-ripple class=\"mt-vh-2 q-pl-none\">\n              <q-item-section avatar>\n                <q-btn\n                  flat\n                  icon=\"create\"\n                  color=\"pink-6\"\n                  class=\"text-black h-mc ml-auto\"\n                  @click=\"\n                    dialogmain = true;\n                    resetUserName = true;\n                  \"\n                />\n              </q-item-section>\n              <q-item-section>\n                <q-item-label\n                  title=\"Разрешить подглядывания\"\n                  class=\"text-body1 text-weight-regular gray-1337\"\n                >\n                  {{ username }}</q-item-label\n                >\n              </q-item-section>\n            </q-item>\n          </div>\n          <div class=\"mt-vh-2\">\n            <p class=\"text-fxl text-weight-bold text-black q-ma-none\">Пароль</p>\n            <q-item tag=\"label\" v-ripple class=\"mt-vh-2 q-pl-none\">\n              <q-item-section avatar>\n                <q-btn\n                  flat\n                  icon=\"create\"\n                  color=\"pink-6\"\n                  class=\"text-black h-mc ml-auto\"\n                  @click=\"\n                    dialogmain = true;\n                    resetPassword = true;\n                  \"\n                />\n              </q-item-section>\n              <q-item-section>\n                <q-item-label\n                  title=\"Разрешить подглядывания\"\n                  class=\"text-body1 text-weight-regular gray-1337\"\n                >\n                  ***********\n                </q-item-label>\n              </q-item-section>\n            </q-item>\n          </div>\n          <div class=\"mt-vh-2\">\n            <p class=\"text-fxl text-weight-bold text-black q-ma-none\">Почта</p>\n            <q-item tag=\"label\" v-ripple class=\"mt-vh-2 q-pl-none\">\n              <q-item-section avatar>\n                <q-btn\n                  flat\n                  icon=\"create\"\n                  color=\"pink-6\"\n                  class=\"text-black h-mc ml-auto\"\n                  @click=\"\n                    dialogmain = true;\n                    resetEmail = true;\n                  \"\n                />\n              </q-item-section>\n              <q-item-section>\n                <q-item-label\n                  title=\"Разрешить подглядывания\"\n                  class=\"text-body1 text-weight-regular gray-1337\"\n                >\n                  {{ thisModel.email }}\n                </q-item-label>\n              </q-item-section>\n            </q-item>\n          </div>\n          <div class=\"mt-vh-4 mb-vh-4\" v-if=\"isModel\">\n            <!-- get streaming token-->\n         \n            <q-btn\n                  label=\"OBS потоковая информация:\"\n                  @click=\"getstreamkeyOB()\"\n                  outline\n                  rounded\n                  text-color=\"pink\"\n                  class=\"full-width q-mt-md\"\n                  :loading=\"btnObs\"\n                ><template v-slot:loading>\n        <q-spinner-radio />\n      </template></q-btn>\n            <q-card\n              v-if=\"submitResult.status\"\n              flat\n              bordered\n              class=\"q-mt-md bg-grey-white\"\n            >\n              <q-card-section\n                class=\"text-black text-comment-16 flex-center-between\"\n                >Описания для OBS:\n              </q-card-section>\n              <q-separator />\n              <q-card-section>\n                <q-input v-model=\"streamingUrl\" readonly label-slot>\n                  <template v-slot:append>\n                    <q-icon\n                      name=\"content_paste\"\n                      @click=\"copy\"\n                      class=\"cursor-pointer\"\n                    />\n                  </template>\n                </q-input>\n              </q-card-section>\n              <q-separator />\n\n              <q-input\n                v-model=\"submitResult.value\"\n                filled\n                autogrow\n                readonly\n                label-slot\n              >\n                <template v-slot:append>\n                  <q-icon\n                    name=\"content_paste\"\n                    @click=\"copy2\"\n                    class=\"cursor-pointer\"\n                  />\n                </template>\n              </q-input>\n            </q-card>\n          </div>\n          <q-btn\n            v-if=\"!isModel\"\n            class=\"row q-mt-lg fixbtn q-px-md q-mx-auto\"\n            unelevated\n            rounded\n            color=\"pink-6\"\n            label=\"Стать моделью\"\n            to=\"/become_a_model\"\n         />\n        </q-scroll-area>\n      </div>\n       <q-dialog\n      v-model=\"dialogmain\"\n      @hide=\"clearAll()\"\n      content-style=\"dialog\"\n      content-class=\"card-bg \"\n    >\n      <q-card flat class=\"mw-i w-100 rounded-14\">\n        <div v-if=\"true\">\n          <p\n            v-if=\"resetName\"\n            class=\"q-mt-none mb-vh-2 mt-vh-2 text-fxl text-center\"\n          >\n            Изменить имя\n          </p>\n          <p\n            v-else-if=\"resetUserName\"\n            class=\"q-mt-none mb-vh-2 mt-vh-2 text-fxl text-center\"\n          >\n            Изменить имя пользователя\n          </p>\n          <p\n            v-else-if=\"resetPassword\"\n            class=\"q-mt-none mb-vh-2 mt-vh-2 text-fxl text-center\"\n          >\n            Изменить пароль\n          </p>\n          <p\n            v-else-if=\"resetEmail\"\n            class=\"q-mt-none mb-vh-2 mt-vh-2 text-fxl text-center\"\n          >\n            Изменить Email\n          </p>\n          <q-separator />\n          <q-form>\n            <q-input\n              v-if=\"resetName\"\n              v-model=\"resetNameLabel\"\n              ref=\"user\"\n              label=\"Ваше новое имя\"\n              outlined\n              lazy-rules\n              class=\"mt-vh-5 text-body1 q-ml-xs mx-vw-1 h-vh-4-st q-pa-none\"\n              input-class=\"text-body1 q-ml-xs\"\n              type=\"text\"\n              :rules=\"[\n                (val) =>\n                  (val && val.length > 3) ||\n                  'Поле пустое или меньше 3 символов',\n              ]\"\n            >\n            </q-input>\n            <q-input\n              v-else-if=\"resetUserName\"\n              v-model=\"resetUserNameLabel\"\n              ref=\"user\"\n              label=\"Ваш новое имя пользователя\"\n              outlined\n              lazy-rules\n              mask=\"@xxxxxxxxxxxxxxx\"\n              class=\"mt-vh-5 text-body1 q-ml-xs mx-vw-1 h-vh-4-st q-pa-none\"\n              input-class=\"text-body1 q-ml-xs\"\n              type=\"text\"\n              :rules=\"[\n                (val) =>\n                  (val && val.length > 3) ||\n                  'Поле пустое или меньше 3 символов',\n              ]\"\n            >\n            </q-input>\n            <div v-else-if=\"resetPassword\">\n              <q-input\n                v-model=\"resetPasswordLabel\"\n                label=\"Новый пароль\"\n                outlined\n                lazy-rules\n                class=\"mt-vh-5 text-body1 q-ml-xs mx-vw-1 h-vh-4-st q-pa-none\"\n                input-class=\"text-body1 q-ml-xs\"\n                type=\"password\"\n                :rules=\"[\n                  (val) =>\n                    (val && val.length > 3) ||\n                    'Пароль должен быть более 3 символов',\n                ]\"\n              >\n              </q-input>\n              <q-input\n                v-model=\"resetTryPasswordLabel\"\n                label=\"Повторите пароль\"\n                outlined\n                type=\"password\"\n                class=\"mt-vh-5 text-body1 q-ml-xs mx-vw-1 h-vh-4-st q-pa-none\"\n                input-class=\"text-body1 q-ml-xs\"\n                lazy-rules\n                :rules=\"[\n                  (val) =>\n                    (val && val.length > 3 && val == resetPasswordLabel) ||\n                    'Пароли не совпадают',\n                ]\"\n              >\n              </q-input>\n            </div>\n            <q-input\n              v-else-if=\"resetEmail\"\n              v-model=\"resetEmailLabel\"\n              label=\"Email\"\n              outlined\n              lazy-rules\n              class=\"mt-vh-5 text-body1 q-ml-xs mx-vw-1 h-vh-4-st q-pa-none\"\n              input-class=\"text-body1 q-ml-xs\"\n              type=\"email\"\n              :rules=\"[\n                (val) =>\n                  (validateEmail(val) && val.length > 0) || 'Укажите email',\n              ]\"\n            >\n            </q-input>\n            <q-separator class=\"mt-vh-5\" />\n            <q-card-actions class=\"d-flex q-pa-none flex-nowrap\" align=\"around\">\n              <q-btn\n                label=\"Отменить\"\n                @click=\"clearAll()\"\n                text-color=\"black\"\n                flat\n                class=\"w-50 text-comment-14 h-vh-1080-50px\"\n              />\n              <q-separator vertical />\n              <q-btn\n                label=\"Сохранить\"\n                @click=\"controllerSend()\"\n                text-color=\"black\"\n                flat\n                :disable=\"!validatedisable()\"\n                class=\"w-50 text-comment-14 h-vh-1080-50px\"\n              />\n            </q-card-actions>\n          </q-form>\n        </div>\n      </q-card>\n    </q-dialog>\n  </q-layout>\n</template>\n\n<script src=\"https://static.yamoney.ru/checkout-js/v1/checkout.js\"></script>\n<script>\n\nimport http from \"../../http-common\";\nimport { LocalStorage, copyToClipboard } from 'quasar';\nimport { mapState } from 'vuex'\nexport default {\n  name: \"App\",\n  components: {\n\n  },\n  data() {\n    return {\n      streamingUrl: \"rtmp://rtmp.cg.house/live\",\n      showkey: false,\n      dialogmain: false,\n      resetName: false,\n      resetUserName: false,\n      resetPassword: false,\n      resetEmail: false,\n      btnObs:false,\n      resetNameLabel: null,\n      resetUserNameLabel: null,\n      resetPasswordLabel: null,\n      resetTryPasswordLabel: null,\n      resetEmailLabel: null,\n      isModel: false,\n      balance: null,\n      username: null,\n      withdrawDialog: false,\n      currency: null,\n      amount: null,\n      depositDialog: false,\n      yad: false,\n      amount_deposit: null,\n      order_id: 0,\n      listavatars: null,\n      recModels: 5,\n      modelall_video: 0,\n      subscribList: null,\n      subscribListL: false,\n      playedid: null,\n      ava: null,\n      base64ava: null,\n      newava: null,\n      token: null,\n      userid: null,\n      name: LocalStorage.getItem(\"name\"),\n      auth: false,\n      readerFile: new FileReader(),\n      submitResult: {\n        status: false,\n        value: null,\n      },\n      thisModel: {\n        avatars: null,\n        createdAt: null,\n        is_vip: null,\n        name: null,\n        pub_streamid: null,\n        sec_streamid: null,\n        updatedAt: null,\n        email: null,\n        videos: {},\n      },\n      thumbStyle: {\n        display: \"none\",\n      },\n      barStyle: {\n        display: \"none\",\n      },\n      controls: [\n        \"play-large\", // The large play button in the center\n        \"restart\", // Restart playback\n        \"rewind\", // Rewind by the seek time (default 10 seconds)\n        \"play\", // Play/pause playback\n        \"fast-forward\", // Fast forward by the seek time (default 10 seconds)\n        \"progress\", // The progress bar and scrubber for playback and buffering\n        \"current-time\", // The current time of playback\n        \"duration\", // The full duration of the media\n        \"mute\", // Toggle mute\n        \"volume\", // Volume control\n        \"captions\", // Toggle captions\n        \"settings\", // Settings menu\n        \"pip\", // Picture-in-picture (currently Safari only)\n        \"airplay\", // Airplay (currently Safari only)\n        \"download\", // Show a download button with a link to either the current source or a custom URL you specify in your options\n        \"fullscreen\", // Toggle fullscreen\n      ],\n    };\n  },\n  computed:{\n   ...mapState(['pcm'])\n  },\n\n  sockets:{\n   getstreamkey(data) {\n      this.submitResult.status = data.status;\n      this.submitResult.value = data.key;\n      this.btnObs = false\n    },\n    cl_authcontroll: function (response) {\n      if (response.massage == \"auth\") {\n        this.auth = true;\n      } else if (response.massage == \"deauth\") {\n        this.auth = false;\n      }\n    },\n    cl_subscribeControle: function (response) {\n      // if (response.opennotifs) {\n      //   initializerFirebase(),\n      //     askForPermissioToReceiveNotifications(response.id, Platform.is);\n      // }\n      if (response.status == \"ok\") {\n        this.recModels[response.index].issubscribe = true;\n        this.$q.notify({\n          color: \"pink-6\",\n          message: \"Подписка на \" + response.name + \" оформлена\",\n        });\n      }\n      if (response.status == \"removed\") {\n        this.recModels[response.index].issubscribe = false;\n        this.$q.notify({\n          color: \"pink-6\",\n          message: \"Вы отказались от подписки на \" + response.name,\n        });\n      }\n      if (response.status == \"error\") {\n        if (response.log == \"you can not follow your self\") {\n          this.$q.notify({\n            color: \"pink-6\",\n            message: \"Вы не можете подписаться сами на себя \",\n          });\n        }\n      }\n    },\n    cl_getuserinfos: function (response) {\n      console.log(response);\n      this.thisModel = response;\n      if (this.username != response.username) {\n        if (response.username != null || response.username != \"\") {\n          this.username = response.username;\n          this.resetUserNameLabel = response.username;\n         // LocalStorage.setItem(\"username\", this.username);\n        }\n      }\n      if (this.thisModel.name != response.name) {\n        if (response.name != null || response.name != \"\") {\n          this.thisModel.name = response.name;\n          this.resetNameLabel = response.name;\n         // LocalStorage.setItem(\"name\", name);\n        }\n      }\n      if (this.thisModel.name != response.email) {\n        if (response.email != null || response.email != \"\") {\n          this.resetEmailLabel = response.email;\n          this.thisModel.email = response.email;\n        }\n      }\n    },\n    cl_changet: function (response) {\n      if (response.status != \"ok\") {\n        this.$q.notify(\"Возникла непредвиденная ошибка\");\n        return;\n      }\n      this.$socket.emit(\"getuserinfo\", {\n        token: this.pcm.user.tk,\n        username: this.pcm.user.un,\n      });\n      http({\n        method: \"get\",\n        url: \"/models\",\n        headers: {\n          \"x-access-token\": this.pcm.user.tk,\n        },\n      }).then((response) => {\n        this.recModels = response.data;\n      });\n    },\n  },\n  beforeMount(){\n    this.isModel = this.pcm.user.rol\n    this.auth =  this.pcm.auth\n       if (!this.pcm.auth) {\n      this.$router.push(\"/\");\n    } else {\n   http({\n      method: \"post\",\n      url: \"/getavatars\",\n      data: {\n        size: 10,\n      },\n    }).then((res) => {\n      this.listavatars = res.data;\n    });\n    this.$nextTick(()=>{\n           this.$socket.emit(\"s_chagePage\", {\n      page: \"index\",\n    });\n    this.$socket.emit(\"getuserinfo\", {\n      token: this.pcm.user.tk,\n      username: this.pcm.user.un,\n    });\n          http({\n          method: \"get\",\n          url: \"/balance\",\n          headers: {\n            \"x-access-token\": this.pcm.user.tk,\n          },\n        }).then((response) => {\n          this.balance = response.data.balance;\n        });\n    })\n    }\n  },\n  mounted() {\n    // const checkout = YandexCheckout(\n    //   \"7CD398BA5F300CE05CE19E46EA4ACA4EB5AA9728AF031DA21ED6D331B685BB02\"\n    // );\n  },\n  created(){\n  },\n  beforeCreate() {\n    // http({\n    //   method: \"get\",\n    //   url: \"/podplist\",\n    //   headers: {\n    //     \"x-access-token\": this.pcm.user.tk,\n    //   },\n    // }).then((response) => {\n    //   this.subscribListL = true;\n    //   this.subscribList = response.data;\n    //   console.log(\"podplist \\n\");\n    //   console.log(response.data);\n    // });\n    // http({\n    //   method: \"get\",\n    //   url: \"/verify_sess\",\n    //   headers: {\n    //     \"x-access-token\": this.pcm.user.tk,\n    //   },\n    // }).then((response2) => {\n    //   if (response2.data.session == \"YES\") {\n    //     if (response2.data.ismodel == \"Y\") {\n    //       this.isModel = true;\n    //     }\n    //     console.log(this.isModel);\n    //     this.auth = true;\n    //     http({\n    //       method: \"get\",\n    //       url: \"/models\",\n    //       headers: {\n    //         \"x-access-token\": this.pcm.user.tk,\n    //       },\n    //     }).then((response) => {\n    //       this.recModels = response.data;\n    //     });\n\n  \n\n    //     http({\n    //       method: \"get\",\n    //       url: \"/verify_sess\",\n    //       headers: {\n    //         \"x-access-token\": this.pcm.user.tk,\n    //       },\n    //     }).then((response2) => {\n    //       if (response2.data.session == \"YES\") {\n    //         if (response2.data.isModel == \"Y\") {\n    //           this.isModel = true;\n    //         }\n    //         this.auth = true;\n    //       } else {\n    //         this.auth = false;\n    //       }\n    //     });\n    //   } else {\n    //     this.$router.push(\"/\");\n    //   }\n    // });\n  },\n\n  methods: {\n    routeback(){\n      this.$router.push('/')\n    },\n  copy(evt) {\n      copyToClipboard(this.streamingUrl);\n      this.$q.notify({\n        color: \"pink-6\",\n        message: \"Ключ скопирован в буфер обмена\",\n      });\n    },\n    copy2(evt) {\n      copyToClipboard(this.submitResult.value);\n      this.$q.notify({\n        color: \"pink-6\",\n        message: \"URL скопирован в буфер обмена\",\n      });\n    },\n    getstreamkeyOB() {\n      this.btnObs = true\n      this.$socket.emit(\"streamkey\", {\n        token: this.pcm.user.tk,\n      });\n    },\n    subscribe(modelid, modell, index) {\n      this.$socket.emit(\"subscribeControle\", {\n        sender: this.pcm.user.id,\n        receiver: modelid,\n        token: this.pcm.user.tk,\n        index: index,\n      });\n    },\n    getAvatarsStandart() {\n      function getRandomInt(max) {\n        return Math.floor(Math.random() * Math.floor(max));\n      }\n      var i = getRandomInt(19);\n      this.newava = this.listavatars[i];\n      this.$socket.emit(\"changeuseravatar\", {\n        token: this.pcm.user.tk,\n        src: this.newava,\n      });\n    },\n\n    validatedisable() {\n      //  resetName\n      // -resetUserName\n      // -resetPassword\n      // -resetEmail\n\n      // resetNameLabel:null,\n      // resetUserNameLabel:null,\n      // resetPasswordLabel:null,\n      // resetTryPasswordLabel:null,\n      // resetEmailLabel:null,\n      if (this.resetName) {\n        if (this.resetNameLabel == null) {\n          return false;\n        }\n        return this.resetNameLabel.length > 3;\n      } else if (this.resetUserName) {\n        if (this.resetUserNameLabel == null) {\n          return false;\n        }\n        return this.resetUserNameLabel.length > 3;\n      } else if (this.resetPassword) {\n        if (\n          this.resetPasswordLabel === null ||\n          this.resetTryPasswordLabel == null\n        ) {\n          return false;\n        }\n        return (\n          this.resetPasswordLabel.length > 3 &&\n          this.resetPasswordLabel == this.resetTryPasswordLabel\n        );\n      } else if (this.resetEmail) {\n        return this.validateEmail(this.resetEmailLabel);\n      } else {\n        return false;\n      }\n    },\n    setchange(type) {\n      if (type == \"ImgSend\") {\n        if (this.base64ava == null) {\n          this.$q.notify(\"Возникла непредвиденная ошибка\");\n          return;\n        }\n        this.$socket.emit(\"settings\", {\n          token: this.pcm.user.tk,\n          type: \"setAvatar\",\n          new: this.base64ava,\n        });\n      } else if (type == \"newName\") {\n        if (this.resetNameLabel == null || this.resetNameLabel.lenght < 3) {\n          this.$q.notify(\"Возникла непредвиденная ошибка\");\n          return;\n        }\n        this.$socket.emit(\"settings\", {\n          token: this.pcm.user.tk,\n          type: \"setName\",\n          new: this.resetNameLabel,\n        });\n        this.resetName = false;\n        this.dialogmain = false;\n      } else if (type == \"newUserName\") {\n        if (\n          this.resetUserNameLabel == null ||\n          this.resetUserNameLabel.lenght < 3\n        ) {\n          this.$q.notify(\"Возникла непредвиденная ошибка\");\n          return;\n        }\n        this.$socket.emit(\"settings\", {\n          token: this.pcm.user.tk,\n          type: \"setUsername\",\n          new: this.resetUserNameLabel,\n        });\n        this.resetUserName = false;\n        this.dialogmain = false;\n      } else if (type == \"newPassword\") {\n        if (\n          this.resetPasswordLabel == null ||\n          this.resetPasswordLabel.lenght < 3 ||\n          this.resetPasswordLabel != this.resetTryPasswordLabel\n        ) {\n          this.$q.notify(\"Возникла непредвиденная ошибка\");\n          return;\n        }\n        this.$socket.emit(\"settings\", {\n          token: this.pcm.user.tk,\n          type: \"setPassword\",\n          new: this.resetPasswordLabel,\n        });\n        this.resetPassword = false;\n        this.dialogmain = false;\n      } else if (type == \"newEmail\") {\n        if (!this.validateEmail(this.resetEmailLabel)) {\n          this.$q.notify(\"Возникла непредвиденная ошибка\");\n          return;\n        }\n        this.$socket.emit(\"settings\", {\n          token: this.pcm.user.tk,\n          type: \"setEmail\",\n          new: this.resetEmailLabel,\n        });\n        this.resetEmail = false;\n        this.dialogmain = false;\n      }\n    },\n    controllerSend() {\n      if (this.resetName) {\n        this.setchange(\"newName\");\n      } else if (this.resetUserName) {\n        this.setchange(\"newUserName\");\n      } else if (this.resetPassword) {\n        this.setchange(\"newPassword\");\n      } else if (this.resetEmail) {\n        this.setchange(\"newEmail\");\n      } else {\n        this.$q.notify(\"Возникла непредвиденная ошибка\");\n        return;\n      }\n    },\n    validateEmail(email) {\n      const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(String(email).toLowerCase());\n    },\n    clearAll() {\n      this.dialogmain = false;\n      this.resetName = false;\n      this.resetUserName = false;\n      this.resetPassword = false;\n      this.resetEmail = false;\n      this.resetNameLabel = this.thisModel.name;\n      this.resetUserNameLabel = this.thisModel.username;\n      this.resetEmailLabel = this.thisModel.email;\n    },\n    getImgBase64() {\n      this.readerFile.readAsDataURL(this.ava);\n      this.readerFile.onload = (event) => {\n        this.base64ava = this.readerFile.result;\n        this.setchange(\"ImgSend\");\n      };\n    },\n    debug() {},\n    depositstart() {\n      http({\n        method: \"get\",\n        url: \"/depositstart\",\n        headers: {\n          \"x-access-token\": this.pcm.user.tk,\n          amount: this.amount_deposit,\n        },\n      }).then((response2) => {\n        this.order_id = response2.data.link.id;\n        this.yad = true;\n        console.log(response2.data);\n      });\n    },\n     logout() {\n      http({\n        method: \"get\",\n        url: \"/logout\",\n        headers: {\n          \"x-access-token\": this.pcm.user.tk\n        }\n      }).then(response => {\n        LocalStorage.set(\"token\", null);\n        LocalStorage.set(\"username\", null);\n        LocalStorage.set(\"userid\", null);\n        LocalStorage.set(\"name\", null);\n        this.nologin = true;\n        this.nnologin = false;\n        location.replace(\"/\");\n      });\n    },\n    withdraw() {\n      this.withdialog = false;\n      http({\n        method: \"get\",\n        url: \"/withdraw\",\n        headers: {\n          \"x-access-token\": this.pcm.user.tk,\n          amount: parseFloat(this.amount),\n          currency: this.currency,\n        },\n      }).then((response2) => {\n        console.log(response2);\n        this.alert = response2.data.status;\n        if (response2.data.status == \"done\") {\n          location.reload();\n        } else {\n          this.$q.notify({\n            color: \"negative\",\n            message: \"Что-то пошло не так!\",\n          });\n        }\n      });\n    },\n  }\n};\n</script>\n\n<style>\n.infomain {\n  background: #ffffff;\n  border: 1px solid #e5e5e5;\n  box-sizing: border-box;\n  border-radius: 4px;\n}\n.vidoss {\n  height: 15vh;\n}\n.h100 {\n  height: 90%;\n}\n</style>\n","\n<template>\n  <q-page class=\"bg-white text-white\">\n\n    <div v-if=\"$q.platform.is.desktop\">\n      <desktop></desktop>\n    </div>\n\n    <div v-if=\"$q.platform.is.mobile\">\n      <mobile></mobile>\n    </div>\n\n    \n  </q-page>\n</template>\n\n<script>\nimport http from \"../http-common\";\nimport Desktop from \"./desktop/settings.vue\";\nimport Mobile from \"./mobile/settings.vue\";\nimport { LocalStorage } from 'quasar';\n\nexport default {\n  name: \"PageIndex\",\n  components: {\n    desktop: Desktop,\n    mobile: Mobile\n  },\n};\n</script>\n<style >\n.mt10 {\n  margin-top: 10vh;\n}\n</style>>\n"]}