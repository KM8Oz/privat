{"version":3,"sources":["/var/www/html/privat/src/pages/desktop/src/pages/desktop/VideoCaptureD.vue","/var/www/html/privat/src/pages/notstream.vue"],"names":[],"mappings":"AAomBA,mHACA,YACA,CAMA,0IACA,YACA,CAEA,6EACA,YACA,CACA,8BACA,mBACA,CAUA,4IACA,YACA,CC/lBA,mBACI,aAjCJ,CAmCI,uDACI,mEAjCR","file":"8.b5dc0d1c.css","sourcesContent":["<template>\n<section v-if=\"!mediasupport && typefile === 'record'\" class=\"row justify-center\">\n    \n    <div v-bind:class=\"[activeC, 'flex', 'justify-center', 'bg-black','q-mt-none','q-pt-none', 'window-height']\" v-show=\"!isUploading\">\n          <div class=\"w-100 h-100 q-pa-none q-ma-none justify-center row videowrapper\" >\n         <video ref=\"videoRec\" v-bind:class=\"[activeCc, 'h-100', 'q-pa-none', 'q-ma-none', 'video-6-19']\"\n          playsInline\n          muted\n          >\n         </video>\n            </div>\n        <template v-if=\"!isFinished\">\n          <VueRecordVideo class=\"fixed col-6\" :mode=\"recMode\" @stream=\"onStream\" @result=\"onResult\"/> \n        </template>\n    </div>\n    <p class=\"text-white\">{{ alert }}</p>\n        <div\n      class=\"row justify-center  q-my-none q-mx-none h-100 w-40\" v-if=\"isFinished\"\n    >\n      <div class=\"w-100 h-100  col q-mx-md q-mt-md\">\n      <div class=\"row text-h6 text-weight-light\"><p style=\"color:#000;\">Загрузить видео</p></div>\n          <q-input class=\"row  h-10 text-body1 q-mb-md\" outlined \n     input-class=\"q-mx-xs   text-weight-light\"    square v-model=\"form.title\" placeholder=\"название видео...\"  \n     \n     />\n    <q-input class=\"row q-mb-md  text-body1 \"  input-class=\"q-mx-xs text-weight-light\" outlined  type=\"textarea\" square v-model=\"form.description\"\n     placeholder='Описание видео'\n     />\n\n    <q-input class=\"row  h-10 text-body1 q-mb-md\" outlined \n     input-class=\"q-mx-xs   text-weight-light\"    square v-model=\"form.tags\" placeholder=\"#Тег1#Тег2...\"  \n     \n     />\n        <div class=\"row  w-100\">\n         <q-btn\n                  class=\"q-px-none q-mx-auto w-40 q-py-none q-mx-none text-weight-regular q-ml-xs \"\n                  dense\n                  rounded\n                  color=\"pink-6\"\n                  no-caps\n                  @click=\"uploadvid\"\n                  label=\"Опубликовать\"\n                />\n                <q-btn\n                  class=\"q-px-none q-mx-auto w-40 q-py-none q-mx-none text-weight-regular q-ml-xs \"\n                  dense\n                  rounded\n                  color=\"pink-6\"\n                  no-caps\n                  @click=\"forcereload\"\n                  label=\"Отмина\"\n                />\n        </div>\n        <div class=\"row  w-100\">\n                 <q-linear-progress size=\"25px\" :value=\"progress\" track-color=\"red\" stripe  color=\"pink-7\" class=\"q-mt-sm\" />\n        </div>\n        <!-- <div class=\"row  w-100\">\n                  <q-circular-progress\n      show-value\n      font-size=\"25px\"\n      :value=\"progress*100\"\n      size=\"30vh\"\n      :thickness=\"0.02\"\n      color=\"pink\"\n\n      track-color=\"grey-3\"\n      class=\"q-ma-md oswald-semibold text-center\"\n    >\n      {{ uploadState2 ? \"перестройка\" : uploadState3 ? \"сохранить\" : \"передача\"  }} <br/>\n        {{ !uploadState3 && !uploadState2 ?  form.video ? Math.fround((form.video.size / 1024)*progress).toPrecision(2)+'Kb' : 0+'Mb': '#*#'}}\n    </q-circular-progress>\n        </div> -->\n       \n      </div>\n    </div>\n</section>\n<section v-else-if=\"mediasupport && typefile === 'record'\" class=\"fit row justify-center\">\n  <div class=\"q-pa-md col-7\">\n    <q-carousel\n      swipeable\n      animated\n      v-model=\"totuslide\"\n      thumbnails\n      infinite\n    >\n      <q-carousel-slide :name=\"1\" img-src=\"http://rec.camsguns.com/tutos/obs1.png\" />\n      <q-carousel-slide :name=\"2\" img-src=\"http://rec.camsguns.com/tutos/obs2.png\" />\n      <q-carousel-slide :name=\"3\" img-src=\"http://rec.camsguns.com/tutos/obs3.png\" />\n      <q-carousel-slide :name=\"4\" img-src=\"http://rec.camsguns.com/tutos/obs4.png\" />\n      <q-carousel-slide :name=\"4\" img-src=\"http://rec.camsguns.com/tutos/obs5.png\" />\n    </q-carousel>\n  </div>\n</section>\n<!--  bg -->\n<section v-else-if=\"typefile === 'upload'\" :class=\"pcm.controls.dark ? 'row bg-black':'row'\">\n   <div class=\"col-lg-2 col-md-3 mt-vh-4\">\n     <q-followings />\n    </div>\n    <div\n      :class=\"`col-lg-7 col-md-5 mt-vh-4 flex  justify-center fullpageMT  ${pcm.controls.dark?'text-white':'text-dark'}`\"\n    >\n      <div  v-if=\"!isUploading\" class=\"m-mx-23 h-100 w-100 col \">\n      <div class=\"row text-h6 text-weight-light\"><p >Загрузить видео</p></div>\n      <div class=\"row text-weight-light\"><p >выберите видеофайл.</p></div>\n     \n<q-file :class=\" `q-px-none q-py-auto q-mb-md text-subtitle1`\" \n counter\n style=\"height:70px\"\n  @rejected=\"onRejected\"\n  accept=\".mp4,.avi,.mkv,.wmv\"\n  :bg-color=\"pcm.controls.dark?'grey':''\"\n  filled v-model=\"form.video\" label=\"выберите видео\">\n         <template v-if=\"form.video\" v-slot:append>\n          <q-icon name=\"cancel\" @click.stop.prevent=\"form.video = null\" class=\"cursor-pointer\" />\n        </template>\n         <div  v-if=\"form.video\" class=\" relative-position text-pink text-subtitle1 q-pa-none\">\n            {{ form.video.name }}\n          </div>\n      </q-file>\n          <q-input class=\"row  h-10 text-body1 q-mb-md\" outlined \n     :input-class=\"`q-mx-xs ${pcm.controls.dark?'text-white':'text-dark'} text-weight-light`\"    square v-model=\"form.title\" placeholder=\"название видео...\"  \n       :color=\"pcm.controls.dark?'white':'dark'\"\n       :bg-color=\"pcm.controls.dark?'grey':''\"\n     />\n    <q-input class=\"row q-mb-md  text-body1 \"  :input-class=\"`q-mx-xs ${pcm.controls.dark?'text-white':'text-dark'} text-weight-light`\" outlined  type=\"textarea\" square v-model=\"form.description\"\n     placeholder='Описание видео'\n     :color=\"pcm.controls.dark?'white':'dark'\"\n     :bg-color=\"pcm.controls.dark?'grey':''\"\n     />\n\n    <q-input class=\"row  h-10 text-body1 q-mb-md\" outlined \n     :input-class=\"`q-mx-xs ${pcm.controls.dark?'text-white':'text-dark'} text-weight-light`\"    square v-model=\"form.tags\" placeholder=\"#Тег1#Тег2...\"  \n       :color=\"pcm.controls.dark?'white':'dark'\"\n       :bg-color=\"pcm.controls.dark?'grey':''\"\n     />\n        <div class=\"row  w-100\">\n         <q-btn\n                  class=\"q-px-none q-mx-auto w-40 q-py-none q-mx-none text-weight-regular q-ml-xs \"\n                  dense\n                  rounded\n                  color=\"pink-6\"\n\n                  no-caps\n                  @click=\"uploadvid\"\n                  label=\"Загрузить\"\n                />\n        </div>\n      </div>\n      <div class=\"m-mx-23 h-100 w-100 row justify-center\" v-else>\n           <q-circular-progress\n      show-value\n      font-size=\"30px\"\n      :value=\"progress*100\"\n      size=\"45vh\"\n      :thickness=\"0.02\"\n      color=\"pink\"\n\n      track-color=\"grey-3\"\n      class=\"q-ma-md oswald-semibold text-center\"\n    >\n      {{ uploadState2 ? \"перестройка\" : uploadState3 ? \"сохранить\" : \"передача\"  }} <br/>\n        {{ !uploadState3 && !uploadState2 ?  form.video ? Math.fround((form.video.size / 1024)*progress).toPrecision(2)+'Kb' : 0+'Mb': '#*#'}}\n    </q-circular-progress>\n       <q-linear-progress size=\"25px\" :value=\"progress\" track-color=\"red\" stripe  color=\"pink-7\" class=\"q-mt-sm\" />\n      </div>\n    </div>\n    <!--Рекомендации-->\n  <q-listrec />\n</section>\n   <section v-else :class=\"`row fit justify-center ${pcm.controls.dark ?'bg-dark text-white':'text-dark'}`\">\n    <div class=\"col-lg-2 col-md-3 mt-vh-4\">\n     <q-followings />\n    </div>\n    \n      <div\n      v-if=\"typefile === 'OBS'\"\n      class=\"col-lg-6 col-md-6 mt-vh-4 q-mx-md justify-center   \"\n    >\n      <div class=\"h-100  col-12 \">\n      <div class=\"row text-h6 text-weight-light\"><p >Записать видео OBS</p></div>\n      <div class=\"row text-weight-light\"><p >1 - скопируйте и вставьте сервер и ключ в OBS и нажмите кнопку начать запись.</p></div>\n        <div class=\"row text-weight-light\"><p >2 - продолжайте отслеживать размер видео на странице (не закрывайте эту страницу).</p></div>\n      <div class=\"row text-weight-light\"><p >3 - нажмите опубликовать.</p></div>\n\n   <div class=\"row justify-center\">\n              <q-input class=\"col-12  h-10 text-body1 q-mb-md\" outlined \n     input-class=\"q-mx-xs   text-weight-light\"    square v-model=\"form.title\" placeholder=\"название видео...\"  \n     \n     />\n    <q-input class=\"col-12 q-mb-md  text-body1 \"  input-class=\"q-mx-xs text-weight-light\" outlined  type=\"textarea\" square v-model=\"form.description\"\n     placeholder='Описание видео'\n     />\n\n    <q-input class=\"col-12  h-10 text-body1 q-mb-md\" outlined \n     input-class=\"q-mx-xs   text-weight-light\"    square v-model=\"form.tags\" placeholder=\"#Тег1#Тег2...\"  \n     \n     />\n                   <div class=\"col-12\"><q-btn\n                   :loading=\"obsbtnloading\"\n                  class=\" q-px-xs q-py-xs q-my-xs q-mx-auto w-100 text-weight-regular  \"\n                  @click=\"generateObs\"\n                  dense\n                  :disable=\"!(form.tags&&form.title&&form.description)\"\n                  rounded\n                  :color=\"obsbtncolor\"\n                  no-caps\n                  :label=\"obsbtnlabel\"\n                >\n                 <template v-slot:loading>\n        <q-spinner-radio />\n        {{obsdatarecorded}}\n      </template>\n                </q-btn></div>\n                 <q-card\n              v-if=\"submitResult.status\"\n              flat\n              bordered\n              class=\"col-12 q-mt-md bg-grey-white\"\n            >\n              <q-card-section>\n                <q-input input-class=\"text-body2\" :value=\"'server: '+streamingUrl\" readonly label-slot>\n                  <template v-slot:append>\n                    <q-icon\n                      name=\"content_paste\"\n                      @click=\"copy\"\n                      class=\"cursor-pointer\"\n                    />\n                  </template>\n                </q-input>\n              </q-card-section>\n              <q-separator />\n\n              <q-input\n              \n                filled\n                autogrow\n                readonly\n                value=\"Key: ********************************************\"\n                label-slot\n              >\n                <template v-slot:append>\n                  <q-icon\n                    name=\"content_paste\"\n                    @click=\"copy2\"\n                    class=\"cursor-pointer\"\n                  />\n                </template>\n              </q-input>\n            </q-card>\n      </div>\n      </div>\n    </div>\n    <div\n    v-else\n      class=\"col-lg-5 col-md-5 mt-vh-4 d-flex justify-content-center fullpageMT\"\n    >\n      <div class=\"m-mx-23 h-100 w-100 col \">\n      <div class=\"row text-h6 text-weight-light\"><p >Записать видео</p></div>\n      <div class=\"row text-weight-light\"><p >Запишите видео используя видеокамеру или выберите видеофайл.</p></div>\n      <div class=\"row justify-center\">\n          <div class=\"col-6\"> <q-btn\n                  class=\" q-px-xs q-py-xs  w-100 text-weight-regular \"\n                  @click=\"goto('record')\"\n                  dense\n                  rounded\n                  color=\"pink-6\"\n                  no-caps\n                  label=\"Записать видео\"\n                /></div>\n          <div class=\"col-6\"><q-btn\n                  class=\" q-px-xs q-py-xs q-ml-xs w-100 text-weight-regular  \"\n                  @click=\"goto('upload')\"\n                  dense\n                  rounded\n                  color=\"pink-6\"\n                  no-caps\n                  label=\"Загрузить видео\"\n                /></div>\n                   <div class=\"col-12\"><q-btn\n                  class=\" q-px-xs q-py-xs q-my-xs q-mx-auto w-100 text-weight-regular  \"\n                  @click=\"goto('OBS')\"\n                  dense\n                  rounded\n                  color=\"pink-6\"\n                  no-caps\n                  label=\"Записать видео OBS\"\n                /></div>\n      </div>\n      </div>\n    </div>\n    <!--Рекомендации-->\n    <div class=\"col-lg-3 col-md-3 mt-vh-4\">\n      <q-listrec />\n    </div>\n \n  </section>\n</template>\n\n<script>\nimport http from \"../../http-common\";\n// import Loader from \"../Loader.vue\";\nimport {\n    LocalStorage\n} from \"quasar\";\nimport { mapState } from 'vuex';\nimport { copyToClipboard } from \"quasar\";\n//import VueRouter from \"vue-router\";\nexport default {\n    name: \"VideoCaptureD\",\n    data() {\n        return {\n            recMode:'press',\n            activeC: \"w-100\",\n            activeCc:\"w-100\",\n            streamingUrl: \"rtmp://rtmp.cg.house/recorder\",\n            submitResult: {\n        status: false,\n        value: null,\n      },\n            alert: null,\n            errText: null,\n            isModel:false,\n            videostatus:false,\n            typefile: null,\n            totuslide:1,\n            obsbtnloading:false,\n            progress2:0,\n            obsdatarecorded:'...Kb',\n            obsbtnlabel:'генерировать',\n            uploadState3:false,\n            isUploading: false,\n            isRecording: false,\n            isFinished: false,\n            recorder: null,\n            ws: null,\n            obsstage:0,\n            uploadState2:false,\n            progress:0,\n            obsbtncolor:'pink-6',\n            auth:false,\n            respond:null,\n            videoUrl: null,\n            videoUrlelastic: null,\n            tags: null,\n            isUploading:false,\n            mess: null,\n            description: null,\n            mediaStream: null,\n            videocontrols:{\n                ctl:'',\n                autoplay:'',\n                loop:'off'\n            },\n            form:{\n                title:null,\n                description:null,\n                tags:null,\n                video:null,\n                url:null,\n                token:null\n            }\n        };\n    },\n    computed:{\n        mediasupport:function(){\n        return !navigator.mediaDevices?.getSupportedConstraints() || !!Object.values(navigator.mediaDevices?.getSupportedConstraints()).map(e=>e===false).length > 4\n        },\n     ...mapState(['pcm']),\n     video:function(){\n       return this.$refs.videoRec || document.getElementsByTagName(\"video\")[0]\n     },\n     videoWrapper:function(){\n       return document.getElementsByClassName(\"videowrapper\")[0];\n     }\n    },\n    created() {\n        if (!this.uploadUrl) this.errText = \"There is no upload url available\";\n    },\n    beforeMount(){\n    //  this.getWebSocket(); \n        this.form.token = this.pcm.user.tk\n        this.isModel = this.pcm.user.rol\n        this.auth = this.pcm.auth\n        if (!this.auth | !this.isModel) {\n            this.$router.push(\"/\");\n        } else {\n\n        }\n    },\n    mounted() {\n    },\n    beforeCreate(){\n    },\n    methods: {\n      generateObs:function(){\n        if(this.obsstage === 0){\n        this.obsbtnloading = true;\n       // console.log(`recording${this.pcm.user.id}`);\n            this.$socket.emit('join', `recording${this.pcm.user.id}`)\n      this.getstreamkeyOB()\n      } else {\n   this.pushdataafterrecord()\n      }\n      },\n      copy(evt) {\n      copyToClipboard(this.streamingUrl);\n      this.$q.notify({\n        color: \"pink-6\",\n        message: \"Ключ скопирован в буфер обмена\",\n      });\n    },\n     getstreamkeyOB() {\n      this.$socket.emit(\"streamkey\", {\n        token: this.pcm.user.tk,\n      });\n    },\n    copy2(evt) {\n      copyToClipboard(this.submitResult.value);\n      this.$q.notify({\n        color: \"pink-6\",\n        message: \"URL скопирован в буфер обмена\",\n      });\n    },\n             onRejected (rejectedEntries) {\n      // Notify plugin needs to be installed\n      // https://quasar.dev/quasar-plugins/notify#Installation\n                 this.$notify.error({\n            title: 'Советы по загрузке',\n           message: `Тестовая среда не может загружать файлы ${rejectedEntries.length}`\n      })\n      // eslint-disable-next-line no-console\n           },\n   \n        resetVideo:function(){},\n        onResult:function(video){\n            //console.log(video,{token:LocalStorage.getItem('token'),buffer:video});\n            this.form.video = video;\n            // this.uploadvid()\n            this.isFinished = true\n                       this.video.remove()\n                   this.videostatus = true\n                    this.videostatus = false\n                     this.activeC = 'w-60'\n                     this.activeCc = 'w-64'\n                     let videos = document.createElement(\"video\");\n                     videos.className = \"w-64 h-100 q-pa-none q-ma-none video-6-19 \";\n                      videos.loop = true;\n                      videos.type = 'video/mp4';   \n                     videos.crossOrigin = 'anonymous';  \n                     videos.controls = true;\n                     // this.video.srcObject = null;\n                     videos.src = URL.createObjectURL(video);\n                      let vm = this\n                     \n                     //console.log(this.videoWrapper);\n                     this.videoWrapper.appendChild(videos)\n                    this.$nextTick(()=>{\n                     \n                     let playlopper =  setInterval(()=>{\n                      videos.load()\n            \n                     },1000) \n                  videos.onloadedmetadata = function(e){\n                             clearInterval(playlopper)\n                             var playPromise =   e.target.play()\n                         \n// In browsers that don’t yet support this functionality,\n// playPromise won’t be defined.\nif (playPromise !== undefined) {\n  playPromise.then(function() {\n    // Automatic playback started!\n  }).catch(function(error) {\n    console.log(error);\n    // Automatic playback failed.\n    // Show a UI element to let the user manually start playback.\n  });\n}\n                           }\n                    })\n        },\n        // reset video display with media device media stream\n        goto(type){\n            this.typefile = type\n        },\n        // start recoording\n        record() {\n            if (!this.uploadUrl) return;\n            this.isRecording = true;\n            this.recorder.start(1000);\n        },\n       \n            forcereload(){\n             location.reload()\n            },\n        uploadvid(){\n            let vm = this\n            var op = 100\n            this.BinaryClient().then((client)=>{\n              vm.isUploading = true\n             client.on('open', function(){\n                var stream = client.send(vm.form.video, {name: vm.form.video.name, size: vm.form.video.size});\n                                   var tx = 0;\n                 stream.on('data', function(data){\n                  // console.log(data);\n                 data.stage === 2 &&  data.state === \"start\" ? (tx = 0, vm.uploadState2 = true, op=10000) : null;\n                  data.stage === 3 &&  data.state === \"start\" ? (tx = 0, vm.uploadState3 = true, vm.form.url = data.url,  op=100) : null;\n                  data.state === \"done\" ? (vm.form.url = data.url,vm.pushdataafterrecord()) : null;\n          vm.progress = Math.round(tx+=data.rx*op)/100;\n         // console.log(Math.round(tx),\"% to complete\");\n        });\n             })\n             \n          })        \n\n        },\n        pushdataafterrecord(){\n             if(this.verifyfilds()){\n                        this.send().then(()=>{\n                             this.$q.notify({\n                     type: 'positive',\n                    message:'sending data ....',\n                  color:'green-6',\n                   progress: true,\n                   timeout: 3000,\n                    onDismiss:()=>{\n                            this.$router.push('/')\n                    }\n                         })\n                           \n                        })\n                    } else {\n                         this.$q.notify({\n                     type: 'positive',\n                    message:'check data and resend please !',\n                  color:'red-6',\n                         })\n                    }\n        },\n         send:async  function (){\n            var body = {\n                tag: this.form.tags,\n                text: this.form.description,\n                videolink: this.form.url,\n            };\n            http({\n                method: \"post\",\n                url: \"/create_videos\",\n                data: body,\n                headers: {\n                    \"x-access-token\": this.pcm.user.tk\n                }\n            }).then(response => {\n                this.alert = response.data;\n \n            });\n        },\n        // initialize MediaRecorder and video element source\n        onStream(mediaStream) {\n            this.video.srcObject = mediaStream;\n            this.video.play()\n            //this.toggleVideo();\n        },\n        verifyfilds(){\n            console.log(this.form.title , this.form.description , this.form.tags , this.form.url);\n            if(this.form.title && this.form.description && this.form.tags && this.form.url){\n              return true;\n            } else {\n                return false;\n            }\n        },\n        // toggle video display\n        toggleVideo() {\n            this.video.loop = !this.video.loop;\n         this.video.controls = !this.video.controls;\n        }\n    },\n      sockets: {\n        recording(data){\n   //console.log(data);\n   this.obsdatarecorded = data.progress\n   if(data.status === \"done\"){\n     this.form.url =  'https://rec.camsguns.com/'+data.filename+'.mp4'\n     this.obsbtnloading = false\n     this.obsbtncolor = 'green'\n     this.obsbtnlabel = 'публиковать'\n     this.obsstage = 3\n   }\n        },\n     getstreamkey(data) {\n      this.submitResult.status = data.status;\n      this.submitResult.value = data.key;\n    },\n      cl_uploaded: function(res){\n      // if(res){\n      //   //  console.log('subscribe',res);\n      //     this.isFinished = true;\n      //      this.video.srcObject  = null\n      //     this.video.src  = 'https://record.camsguns.com'+res\n      //     this.video.play()\n      //     this.video.controls = true;\n      //       //this.activeC = 'w-70'\n      // }\n      }\n    },\n};\n</script>\n\n<style scoped>\nvideo::-webkit-media-controls-play-button {\n    display: none;\n}\n\nvideo::-webkit-media-controls-timeline {\n    display: none;\n}\n\nvideo::-webkit-media-controls-current-time-display {\n    display: none;\n}\n\nvideo::-webkit-media-controls-time-remaining-display {\n    display: none;\n}\n\nvideo::-webkit-media-controls-toggle-closed-captions-button {\n    display: none;\n}\n.plyr--video {\n    top: -22px !important;\n}\n\nvideo::-webkit-media-controls-volume-slider {\n    display: none;\n}\n\nvideo::-webkit-media-controls-volume-slider {\n    display: none;\n}\n\nvideo::-webkit-media-controls-volume-control-hover-background {\n    display: none;\n}\n\n\n\n</style>","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\na {\n    color: #049161;\n\n    video::-webkit-media-controls-panel {\n        background-image: linear-gradient(transparent, transparent) !important;\n    }\n\n}\n"]}