{"version":3,"sources":["chunk-common.32379b2b.css","/var/www/html/privat/src/pages/mobile/src/pages/mobile/profile_model.vue","/var/www/html/privat/src/pages/mobile/src/pages/mobile/VideoCapture.vue","/var/www/html/privat/src/pages/mobile/src/pages/mobile/tran.vue","/var/www/html/privat/src/pages/mobile/index.vue","/var/www/html/privat/src/css/record.scss","record.scss"],"names":[],"mappings":"AAAA,gGAAgG,CC0dhG,MACA,cACA,CACA,QACA,WACA,CACA,MACA,UACA,CACA,OACA,iBAAA,CACA,cACA,CACA,yBACA,mCACA,CCRA,YACA,sBACA,CCzUA,wBACA,WAAA,CACA,UACA,CACA,uBACA,WAAA,CACA,UACA,CACA,wBACA,gBAAA,CACA,WACA,CACA,wBACA,YACA,CACA,uBACA,iBACA,CACA,sBACA,gBACA,CACA,wBACA,YACA,CACA,wBACA,WACA,CC8uBI,oCACE,eAAA,CACA,SAAA,CACA,eAAA,CACD,+BAAA,CACC,aAj6BN,CAo6BI,uCACE,UAl6BN,CAq6BI,2CACE,iBAAA,CACG,QAAA,CACL,QAAA,CACA,WAAA,CACE,cAAA,CACA,eAAA,CAEA,SAp6BN,CAq6BM,iDACM,iBAAA,CACR,aAAA,CACA,UAAA,CACA,UAAA,CACA,gBAAA,CACA,qBAAA,CACA,kBAAA,CACA,eAAA,CACA,SAn6BJ,CAq6BQ,+DACE,cAn6BV,CAq6BQ,gEACE,iBAn6BV,CAw6BQ,qEACE,2CAt6BV,CAw6BQ,sEACE,WAt6BV,CAw6BQ,sEACE,2CAt6BV,CA26BQ,sEACE,yCAz6BV,CA26BQ,uEACE,SAz6BV,CA26BQ,uEACE,yCAz6BV,CA66BU,4EACE,6CA36BZ,CA66BU,6EACE,WA36BZ,CA66BU,6EACE,6CA36BZ,CAi7BA,wBACE,sBAAA,CACA,yCAAA,CACA,yBAAA,CACA,oBAAA,CACA,0BA96BF,CAi7BA,uBACE,WAAA,CACA,UA96BF,CAi7BA,wBACE,gBAAA,CACA,WA96BF,CAi7BA,wBACE,YA96BF,CAi7BA,uBACE,iBA96BF,CAi7BA,sBACE,gBA96BF,CAi7BA,wBACE,WA96BF,CAi7BA,uBACE,gBA96BF,CAi7BA,0BACE,eA96BF,CAi7BA,wBACE,aAAA,CACA,WAAA,CACA,aA96BF,CAi7BA,uBACE,mBA96BF,CAi7BA,yBAEE,qCA96BF,CCnHA,SACI,QAAA,CACA,8BCFJ,CDKA,KACE,qBAAA,CACA,gBAAA,CACA,cAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,aCFF,CDGE,OACE,WCDJ,CDGE,OACE,aAAA,CACA,oBCDJ,CDUE,4DACE,YAAA,CACA,qBAAA,CACA,kBCFJ,CDMI,mEACE,WCDN,CDIE,2DAEE,eCFJ,CDIE,6BACE,UAAA,CACA,YCFJ,CDIE,kCACE,cAAA,CACA,aAAA,CACA,WCFJ,CDQA,eACE,YAAA,CACA,WAAA,CACA,WAAA,CACA,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,4BCLF,CDME,+CAEE,WAAA,CACA,UAAA,CACA,eCJJ,CDME,uBACE,oBAAA,CACA,YCJJ,CDSA,QACE,aAAA,CACA,yBAAA,CACA,6BAAA,CACA,iBAAA,CACA,UAAA,CACA,WAAA,CACA,iCCJF,CDQA,aACE,YAAA,CACA,sBAAA,CACA,kBCLF,CDQA,KACE,eAAA,CAGA,WAAA,CACA,cAAA,CACA,WAAA,CACA,WAAA,CACA,iBAAA,CACA,cAAA,CACA,eCLF,CDME,gBATA,oBAAA,CACA,UCMF,CDME,UACE,cCJJ,CDQA,gBACE,GACE,sBCLF,CDOA,GACE,wBCLF,CACF","file":"chunk-common.32379b2b.css","sourcesContent":["@import url(https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900&display=swap);\n\n.mt10 {\n  margin-top: 1vh;\n}\n.vidoss {\n  height: 15vh;\n}\n.h100 {\n  height: 90%;\n}\n.mt20p {\n  position: absolute;\n  margin-top: 10%;\n}\n.plyr__control--overlaid {\n    background: rgb(0 0 0 / 50%) !important;\n}\n\n\n\n.plyr video {\n    height: 100vh !important;\n}\n\n\n.vh100[data-v-75eaeb6d] {\n  height: 90vh;\n  width: 100%;\n}\n.vh40[data-v-75eaeb6d] {\n  height: 20vh;\n  width: 100%;\n}\n.mpb50[data-v-75eaeb6d] {\n  padding-top: 20vh;\n  height: 40vh;\n}\n.zi200[data-v-75eaeb6d] {\n  z-index: -200;\n}\n.bott[data-v-75eaeb6d] {\n  margin-bottom: 0px;\n}\n.mb0[data-v-75eaeb6d] {\n  padding-top: 30vh;\n}\n.vh100[data-v-75eaeb6d] {\n  height: 100vh;\n}\n.zi200[data-v-75eaeb6d] {\n  z-index: 200;\n}\n\n.swiper_menu .menu[data-v-7840fc0f] {\n  min-width: 100px;\n  width: 70%;\n  max-width: 320px;\n  background-color: #ffffff !important;\n  color: #c0095e;\n}\n.swiper_menu .content[data-v-7840fc0f] {\n  width: 100%;\n}\n.swiper_menu .menu-button[data-v-7840fc0f] {\n  position: absolute;\n  top: 48px;\n  left: 0px;\n  padding: 9px;\n  cursor: pointer;\n  transition: 0.3s;\n  z-index: 2;\n}\n.swiper_menu .menu-button .bars[data-v-7840fc0f] {\n  position: relative;\n  display: block;\n  width: 27px;\n  height: 2px;\n  margin: 11px auto;\n  background-color: #fff;\n  border-radius: 10px;\n  transition: 0.3s;\n  z-index: 2;\n}\n.swiper_menu .menu-button .bars[data-v-7840fc0f]:nth-of-type(1) {\n  margin-top: 0px;\n}\n.swiper_menu .menu-button .bars[data-v-7840fc0f]:nth-of-type(3) {\n  margin-bottom: 0px;\n}\n.swiper_menu .menu-button:hover .bars[data-v-7840fc0f]:nth-of-type(1) {\n  transform: translateY(1.5px) rotate(-4.5deg);\n}\n.swiper_menu .menu-button:hover .bars[data-v-7840fc0f]:nth-of-type(2) {\n  opacity: 0.9;\n}\n.swiper_menu .menu-button:hover .bars[data-v-7840fc0f]:nth-of-type(3) {\n  transform: translateY(-1.5px) rotate(4.5deg);\n}\n.swiper_menu .menu-button.opened .bars[data-v-7840fc0f]:nth-of-type(1) {\n  transform: translateY(15px) rotate(-45deg);\n}\n.swiper_menu .menu-button.opened .bars[data-v-7840fc0f]:nth-of-type(2) {\n  opacity: 0;\n}\n.swiper_menu .menu-button.opened .bars[data-v-7840fc0f]:nth-of-type(3) {\n  transform: translateY(-15px) rotate(45deg);\n}\n.swiper_menu .menu-button.opened:hover .bars[data-v-7840fc0f]:nth-of-type(1) {\n  transform: translateY(13.5px) rotate(-40.5deg);\n}\n.swiper_menu .menu-button.opened:hover .bars[data-v-7840fc0f]:nth-of-type(2) {\n  opacity: 0.1;\n}\n.swiper_menu .menu-button.opened:hover .bars[data-v-7840fc0f]:nth-of-type(3) {\n  transform: translateY(-13.5px) rotate(40.5deg);\n}\n.vh100[data-v-7840fc0f] {\n  height: 100vh !important;\n  height: calc(var(--vh, 1vh) * 100) !important;\n  max-height: 100% !important;\n  width: 100% !important;\n  object-fit: cover !important;\n}\n.vh40[data-v-7840fc0f] {\n  height: 20vh;\n  width: 100%;\n}\n.mpb50[data-v-7840fc0f] {\n  padding-top: 20vh;\n  height: 40vh;\n}\n.zi200[data-v-7840fc0f] {\n  z-index: -200;\n}\n.bott[data-v-7840fc0f] {\n  margin-bottom: 0px;\n}\n.mb0[data-v-7840fc0f] {\n  padding-top: 30vh;\n}\n.zi200[data-v-7840fc0f] {\n  z-index: 200;\n}\n.mt20[data-v-7840fc0f] {\n  margin-top: -40px;\n}\n.comdial[data-v-7840fc0f] {\n  max-height: 60vh;\n}\n.clbtn[data-v-7840fc0f] {\n  display: block;\n  float: right;\n  margin-top: 0%;\n}\n.pb50[data-v-7840fc0f] {\n  padding-bottom: 15vh;\n}\n.shadow[data-v-7840fc0f] {\n  filter: drop-shadow(0px 0px 1px black);\n}\n.btn-bot {\n  top: 70vh;\n  z-index: 1000000000000000100000;\n}\n\n#nav {\n  border: 1px solid blue;\n  margin: 20px auto;\n  font-size: 25px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #a7a7a7;\n}\n#nav * {\n  margin: 10px;\n}\n#nav a {\n  color: #a7a7a7;\n  text-decoration: none;\n}\n\n.video-cap-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.video-cap-container .stream-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.video-cap-container .controls {\n  margin: 10px;\n}\n.video-cap-container .controls .btn {\n  margin: 10px;\n}\n.video-cap-container .camera,\n.video-cap-container .preview {\n  object-fit: fill;\n}\n.video-cap-container .camera {\n  width: 100%;\n  filter: FlipH;\n}\n.video-cap-container .error-video {\n  font-size: 25px;\n  color: #ba5151;\n  margin: 10px;\n}\n\n.photo-capture {\n  padding: 10px;\n  margin: 10px;\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n}\n.photo-capture .camera,\n.photo-capture .preview {\n  margin: 10px;\n  width: 100%;\n  object-fit: fill;\n}\n.photo-capture .camera {\n  transform: scaleX(-1);\n  filter: FlipH;\n}\n\n.loader {\n  margin: 0 auto;\n  border: 16px solid #34495e;\n  /* Light grey */\n  border-top: 16px solid #41b883;\n  /* Blue */\n  border-radius: 50%;\n  width: 80px;\n  height: 80px;\n  animation: spin 2s linear infinite;\n}\n\n.flex-center {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.btn {\n  margin-top: 10px;\n  background-color: red;\n  color: white;\n  margin: 10px;\n  min-width: 65px;\n  height: 65px;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  transition: 0.3s;\n}\n.btn:hover {\n  background-color: red;\n  color: white;\n}\n.btn .fas {\n  font-size: 25px;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n","<template>\n  <div class=\"w-100\">\n    <q-dialog v-model=\"withdialog\" class=\"row\">\n      <q-card class=\"bg-white full-width q-pl-sm q-pr-sm\">\n        <p>Укажите необходимую сумму и валюту для вывода</p>\n        <q-select\n          class=\"col-12 q-pt-sm\"\n          outlined\n          v-model=\"currency\"\n          :options=\"options\"\n          label=\"Валюта вывода\"\n        />\n        <q-input\n          class=\"col-12 q-pt-sm\"\n          outlined\n          v-model=\"amount\"\n          placeholder=\"сумма токенов\"\n        />\n        <q-btn\n          color=\"pink-13\"\n          class=\"no-shadow full-width q-mt-sm q-mb-sm\"\n          @click=\"requests(bal)\"\n          label=\"Вывести\"\n        ></q-btn>\n      </q-card>\n    </q-dialog>\n    <div class=\"w-vw-100\">\n      <div class=\"row profilecard\">\n        <div class=\"col-12 flex text-center row justify-center\">\n          <div class=\"col-12\">\n              <q-img class=\"mobile-ui-profile-img w-100\" :src=\"thisModel ? thisModel.avatars : ''\">\n               \n    <div class=\"absolute-top-right bg-none2\">\n      <q-fab\n         text-color=\"white\"\n        class=\"maxc-w self-end \"\n        \n        icon=\"more_horiz\"\n        direction=\"left\"\n        :ripple=\"false\"\n        active-icon=\"circle\"\n      >\n        <q-fab-action\n          color=\"dark\"\n          text-color=\"white\"\n          class=\"flex\"\n          to=\"/profile/settings\"\n          icon=\"settings\"\n        />\n        <q-fab-action\n          color=\"red\"\n          class=\"flex\"\n          text-color=\"white\"\n          @click=\"logout()\"\n          icon=\"power_settings_new\"\n        />\n      </q-fab>\n    </div>\n                <div class=\"absolute-bottom row w-100 flex-center-div q-py-none\">\n          <q-profilebar :id=\"thisModel.id\" v-if=\"showbar\" color=\"white\" :notpravite=\"pravite\" />\n        </div>\n              </q-img>\n          </div>\n        </div>\n\n      \n  <q-card class=\"mobile-ui-profile-infos q-my-xs w-100 \">\n      <q-card-section class=\"col\" horizontal >\n        <div class=\"leftcontent\">\n     <div class=\"text-h6 q-mb-xs q-ml-md text-left \">{{thisModel?thisModel.name:''}}</div>\n        <div class=\"row no-wrap items-center\">\n          <q-rating size=\"28px\" :value=\"thisModel? thisModel.rank : rank\"  :max=\"5\" :disable=\"this.$route.params.modelid === pcm.user.id\" color=\"yellow\" />\n          <span class=\"text-caption text-grey q-ml-sm\">{{thisModel? thisModel.rank : 0}} ({{thisModel? thisModel.subscribers: 0}})</span>\n        </div>\n        </div>\n   \n         <q-card-actions vertical class=\"justify-around q-px-md\" >\n          <q-btn flat round color=\"red\" :ripple=\"false\" icon=\"add\" @click=\"withdialog = true\"/>\n          <q-btn flat round color=\"red\" :label=\"`Ваш баланс: ${ bal ? bal : 0.00 } ₮`\" />\n        </q-card-actions>\n      </q-card-section>\n     \n    </q-card>\n      </div>\n      <div class=\"w-100 q-mt-none h-vh-50\">\n         <swiper\n         ref=\"profile_swiperbig\"\n         :options=\"swiperOptionswitch\"\n         >\n           <swiper-slide>\n        <swiper\n      class=\"swiper h-vh-50 bg-black profile-swiper\"\n      :options=\"swiperOption\"\n      ref=\"profile_swiper\"\n      :auto-update=\"true\"\n      :auto-destroy=\"true\"\n      :delete-instance-on-destroy=\"true\"\n      :cleanup-styles-on-destroy=\"true\">\n      <swiper-slide  v-for=\"(item, index) in vidos\"\n              :key=\"item._id+index\"\n        class=\"h-100 bg-black\">\n<vue-plyr class=\"mute-right h-100 rounded-borders\">\n                  <video\n      \n                    :data-plyr-config='`{ \"controls\": [\"play-large\",\"play\",\"mute\"]}`'\n                    class=\"profilevideo player\"\n                    :id=\"item._id\"\n                    :poster=\"item._source.body.video.replace('.mp4','_mobile.png')\"\n                    :src=\"item._source.body.video.replace('.mp4','_mobile.mp4')\"\n                    color=\"black\"\n                    type=\"video/mp4\"\n                  />\n                </vue-plyr>\n                <q-icon\n                  name=\"zoom_out_map\"\n                  color=\"white\"\n                  size=\"30px\"\n                  @click=\"openfullvideo(item)\"\n                  class=\"z-index-video \"\n                />\n                <q-badge text-color=\"red\"  class=\"badge-galary\" floating ><span>видео</span></q-badge>\n      </swiper-slide>\n      </swiper>\n           </swiper-slide>\n           <swiper-slide>\n              <swiper\n      class=\"swiper h-vh-50 w-100-force bg-black profile-swiper2\"\n      :options=\"swiperOption\"\n      ref=\"profile_swiper_img\"\n      v-if=\"imagesslider\"\n      >\n      <swiper-slide  v-for=\"(item, index) in imagesdata\"\n              :key=\"index\"\n        class=\"h-100 w-100-force bg-black\">\n<q-img :src=\"item.src\"  class=\"profilegalary\"></q-img>\n     <q-badge text-color=\"red\" class=\"badge-galary\" floating ><span>фото</span></q-badge>\n      </swiper-slide>\n      <swiper-slide \n              :key=\"'sdsdsd'\"\n              v-show=\"this.$route.params.modelid === pcm.user.id\"\n        class=\"h-100 bg-black\">\n <q-file\n       \n        class=\"filepicker\"\n        v-model=\"imagefile\"\n        filled\n        input-class=\"filepickerinner\"\n        @input=\"uploadFIle\"\n        :filter=\"checkFile\"\n        @rejected=\"onRejected\"\n      ><q-icon name=\"add\" size=\"50px\" color=\"dark\"/>\n      <template v-slot:file=\"{  }\">\n        <q-chip\n          class=\"full-width q-my-xs\"\n          square\n        >\n\n\n          <div class=\"ellipsis relative-position\">\n            {{ imagefile ? imagefile.name : '' }}\n          </div>\n\n        </q-chip>\n      </template>\n      </q-file>\n      </swiper-slide>\n      </swiper>\n           </swiper-slide>\n         </swiper>\n \n        <q-dialog v-model=\"fullvideo.open\" position=\"bottom\" transition-show=\"bounceIn\">\n          <q-card class=\"profilefullvideo\" v-if=\"fullvideo.video\">\n            <vue-plyr class=\"bigbtnplyr profilevideo mute-right\" :emit=\"['loadeddata']\">\n              <video\n                @play=\"setProgressBar\"\n                controls=\"false\"\n                data-plyr-config='{ \"controls\": [\"mute\"]}'\n                ref=\"dialogVideo\"\n                :src=\"fullvideo.video.video.replace('.mp4','_desktop.mp4')\"\n                color=\"black\"\n                type=\"video/mp4\"\n              />\n            </vue-plyr>\n            <q-linear-progress :value=\"fullvideo.progress\" color=\"pink\" />\n\n            <q-card-section class=\"row items-center no-wrap\">\n              <div class=\"text-left\">\n                <div class=\"text-weight-bold text-uppercase\">\n                  @{{ fullvideo.video.tags ? fullvideo.video.modelname : \"none\" }}\n                </div>\n                <div class=\"text-grey\">\n                  {{ fullvideo.video.tags ? fullvideo.video.tags[0] : \"#none\" }}\n                </div>\n              </div>\n\n              <q-space />\n\n              <q-btn flat round icon=\"play_arrow\" @click=\"$refs.dialogVideo.play()\" />\n              <q-btn flat round icon=\"pause\" @click=\"$refs.dialogVideo.pause()\" />\n              <q-btn flat round icon=\"close\" v-close-popup />\n            </q-card-section>\n          </q-card>\n        </q-dialog>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport http from \"../../http-common\";\nimport { LocalStorage } from \"quasar\";\nimport { mapState } from \"vuex\";\n  import { Swiper, SwiperSlide } from 'vue-awesome-swiper'\n  import 'swiper/css/swiper.css'\nimport { log } from 'video.js';\nexport default {\n  name: \"PageIndex\",\n  components: {},\n  props: [\"pravite\"],\ncomponents: {\n      Swiper,\n      SwiperSlide,\n      },\n  data() {\n    return {\n      bal: 0,\n      imagefile:null,\n      podpis: 0,\n      imagesslider:true,\n      name: null,\n      vidos: [],\n      currency: null,\n      amount: null,\n      withdialog: false,\n      swiperOption: {\n           loop:false,\n           lazy:true,\n          observer: true,\n           slidesPerView: 1,\n          //simulateTouch : true,\n         // loopFillGroupWithBlank: false,\n          // grabCursor: true,\n        zoom: {\n          enabled: true,\n          maxRatio: 4,\n          minRatio: 1,\n          toggle: true,\n        },\n        allowSlideNext:true,\n        allowSlidePrev:true,\n          \n          on: {\n            slideChange: () => {\n             // this.menuOpened = this.swiper.activeIndex === 0\n            }\n          }\n        },\n        swiperOptionswitch: {\n          effect:'fade',\n          resistanceRatio: 0,\n         \n           lazy:false,\n        zoom: {\n          enabled: false,\n          maxRatio: 1,\n          minRatio: 1,\n          toggle: false,\n        },\n         direction: \"vertical\",\n        allowSlideNext:true,\n        allowSlidePrev:true,\n       \n        slidesPerGroupSkip:0,\n          slidesPerView: 1,\n          on: {\n            slideChange: () => {\n             // this.menuOpened = this.swiper.activeIndex === 0\n            }\n          }\n        },\n      options: [\"RUB\", \"USD\", \"EUR\", \"CNY\", \"JPN\"],\n      alert: null,\n      podpleight: 0,\n      followers: 0,\n      likes: 0,\n      vidos: null,\n      imagesdata:null,\n      showbar: false,\n      rank:0,\n      fullvideo: {\n        id: false,\n        video: null,\n        open: null,\n        progress: 0.0,\n      },\n      thisModel: null,\n      thumbStyle: {\n        display: \"none\",\n      },\n      barStyle: {\n        display: \"none\",\n      },\n    };\n  },\n  computed: {\n    ...mapState([\"pcm\"]),\n     imgSwiper : function(){ return this.$refs.profile_swiper_img.$swiper}\n  },\n  sockets: {\n    pastes_images:function(res){\n     \n       if(res.status){\n         this.$q.notify({\n        type: 'positive',\n        message: `done`\n      })\n      this.imgSwiper.removeSlide(0)\n        this.imagesdata.push(res.res)\n          this.$nextTick(()=>{\n     this.imgSwiper.update()\n    })\n      } else {\n         this.imagesslider = false;\n        this.imagesdata = JSON.parse(res)\n          this.$nextTick(()=>{\n     this.imagesslider = true;\n    })\n      }\n  \n    \n       \n    },\n    pastes:function(res){\n      console.log(res);\n    //  this.images = res\n    },\n    cl_getuserinfos: function (response) {\n\n      this.showbar = true;\n      this.thisModel = response;\n      this.vidos = response.videos;\n      this.followers = response.subscribers;\n      this.podpleight = response.subscribing;\n            //console.log('modeldata',this.thisModel );\n    },\n  },\n  methods: {\n    uploadFIle(file){\n     // var v = this.images ? this.image :[];\n     // v.push(URL.createObjectURL(file))\n    //  this.images = V;\n    this.imgSwiper.addSlide(0,`<div class=\"h-100 bg-black swiper-slide swiper-slide-active\"><img src=\"${URL.createObjectURL(file)}\"  class=\"profilegalary\" >\n     <q-badge text-color=\"red\" floating ><span  @click=\"upload()\" id=\"uploadbtn\" class=\"savebtn\">save</span></q-badge></div>`)\n     this.imgSwiper.slideTo(0,500,false)\n     let vm = this\n     console.log(document.getElementById('uploadbtn'));\n    document.getElementById('uploadbtn').addEventListener('click',function(){\n      vm.upload(file)\n    })\n    },\n    upload(file){\n    this.$socket.emit('postes', {type:'upload',tk:this.pcm.user.tk, payload:{img:file}})\n    },\n     checkFile (files) {\n      return files.filter(file => file.type === 'image/png' | file.type === 'image/jpg' |  file.type === 'image/jpeg' | \n      file.size > 2048)\n    },\n     onRejected (rejectedEntries) {\n      this.$q.notify({\n        type: 'negative',\n        message: `file ${rejectedEntries[0]} did not pass validation constraints`\n      })\n    },\n    setProgressBar(evt) {\n      const progresser = setInterval(() => {\n        this.fullvideo.progress = evt.target.currentTime / evt.target.duration;\n        if (evt.target.currentTime === evt.target.duration || evt.target.paused)\n          clearInterval(progresser);\n      }, 100);\n    },\n    openfullvideo(video) {\n      this.fullvideo.video = video._source.body;\n      this.fullvideo.open = true;\n      this.fullvideo.id = video._id;\n    },\n    getdata: function (id) {\n      this.$socket.emit(\"getuserinfoprofile\", {\n        id: id ? id : this.pcm.user.id,\n      });\n    },\n    routeback() {\n      this.$router.push(\"/\");\n    },\n    logout() {\n      let token = this.pcm.user.tk;\n      LocalStorage.clear();\n      this.$q.sessionStorage.remove(\"sspcm\");\n      this.$q.cookies.remove(\"sspcm\");\n      http({\n        method: \"get\",\n        url: \"/logout\",\n        headers: {\n          \"x-access-token\": token,\n        },\n      }).then((response) => {\n        this.nologin = true;\n        this.nnologin = false;\n        location.replace(\"/\");\n      });\n    },\n    requests(i) {\n      this.withdialog = false;\n      http({\n        method: \"get\",\n        url: \"/withdraw\",\n        headers: {\n          \"x-access-token\": this.pcm.user.tk,\n          amount: parseFloat(this.amount),\n          currency: this.currency,\n        },\n      }).then((response2) => {\n        this.alert = response2.data.status;\n        if (response2.data.status == \"done\") {\n          http({\n            method: \"get\",\n            url: \"/balance\",\n            headers: {\n              \"x-access-token\": this.pcm.user.tk,\n            },\n          }).then((response2) => {\n            //console.log('balance',response2);\n            this.bal = response2.data.balance;\n          });\n        }\n      });\n    },\n    create_model() {\n      http({\n        method: \"post\",\n        url: \"/create_model_chat\",\n        headers: {\n          \"x-access-token\": this.pcm.user.tk,\n        },\n      }).then((response) => {});\n    },\n  },\n  beforeMount() {\n    this.getdata(this.$route.params.modelid);\n    this.name = this.pcm.user.un;\n  },\n  created(){\n    \n  },\n  mounted() {\n    // this.$socket.emit(\"getuserinfo\", {\n    //   token: this.pcm.user.tk,\n    //   username: LocalStorage.getItem(\"username\")\n    // });\n    this.$socket.emit('postes',{type:'get',tk:this.pcm.user.tk,payload:{  userid:this.$route.params.modelid ? this.$route.params.modelid : this.pcm.user.id}})\n    http({\n      method: \"get\",\n      url: \"/balance\",\n      headers: {\n        \"x-access-token\": this.pcm.user.tk,\n        'userid':this.pcm.user.id\n      },\n    }).then((response2) => {\n      //console.log(response2);\n      this.bal = response2.data.balance;\n    });\n  },\n};\n</script>\n<style>\n.mt10 {\n  margin-top: 1vh;\n}\n.vidoss {\n  height: 15vh;\n}\n.h100 {\n  height: 90%;\n}\n.mt20p {\n  position: absolute;\n  margin-top: 10%;\n}\n.plyr__control--overlaid {\n    background: rgb(0 0 0 / 50%) !important;\n}\n\n</style>\n>\n","<template>\n<div class=\"fit\">\n  <section v-if=\"isValid\" class=\"row  \" v-touch:swipe.right=\"gohome\">\n    <div\n      v-bind:class=\"[activeC, 'flex', 'justify-center', 'bg-black', 'w-vw-100']\"\n    >\n      <vue-plyr \n    crossorigin\n    controls\n    >\n        <video\n          v-if=\"splayer\"\n          data-plyr-config='{ \"controls\": [\"play-large\"]}'\n          ref=\"videoRec\"\n           poster=\"https://rec.camsguns.com/stream.png\"\n          muted\n         :class=\"[activeC, 'video-fit2', 'bg-black', 'col-12']\"\n          src=\"\"\n          loop\n          autoplay\n          preload\n          metadata\n          playsinline\n        />\n      </vue-plyr>\n        <vue-plyr controls\n    crossorigin\n    v-if=\"!splayer\"\n    >\n        <video\n          ref=\"videoRec2\"\n          data-plyr-config='{ \"controls\": [\"play-large\"]}'\n          muted\n         :class=\"[activeC2, 'video-fit2', 'bg-black', 'col-12']\"\n          src=\"\"\n          loop\n          autoplay\n          preload\n          metadata\n          playsinline\n        />\n      </vue-plyr>\n      <template v-if=\"videoRecorder\">\n        <VueRecordVideo\n          class=\"fixed col-6\"\n          :mode=\"'press'\"\n          @stream=\"onStream\"\n          @result=\"onResult\"\n\n        />\n      </template>\n    </div>\n    <div class=\"col-12 h-vh-60 z-100 bg-white\" v-if=\"videoinfos\">\n      <div class=\"row mt-5 pa-vh-1\">\n        <div class=\"col-12\">\n          <q-input\n            class=\"text-body1\"\n            outlined\n            input-class=\"q-mx-xs text-weight-light\"\n            square\n            v-model=\"example\"\n            placeholder=\"название видео...\"\n          />\n        </div>\n        <!-- <div class=\"col-12\">\n          <q-input v-model=\"diff\" outline dark class=\"text-black\" placeholder = \"Описание видео\" />\n        </div> -->\n        <div class=\"col-12 mt-5\">\n          <q-input\n            class=\"text-body1\"\n            input-class=\"q-mx-xs text-weight-light\"\n            @input=\"chenged\"\n            outlined\n            v-model=\"tags\"\n            placeholder=\"хэштеги через пробел\"\n          />\n        </div>\n        <div class=\"row col-12 justify-between mt-5\">\n          <q-btn\n            class=\"q-px-none q-mx-auto w-40 q-py-none q-mx-none text-weight-regular q-ml-xs\"\n            dense\n            rounded\n            color=\"pink-6\"\n            no-caps\n            @click=\"gohome()\"\n            label=\"Отмина\"\n          />\n          <q-btn\n            class=\"q-px-none q-mx-auto w-40 q-py-none q-mx-none text-weight-regular q-ml-xs\"\n            dense\n            rounded\n            color=\"pink-6\"\n            :disable=\"!notempty\"\n            no-caps\n            @click=\"uploadvid\"\n            label=\"Опубликовать\"\n          />\n        </div>\n        <q-linear-progress size=\"25px\" :value=\"progress\" track-color=\"red\" stripe  color=\"pink-7\" class=\"q-mt-sm\" />\n        <!-- <button type=\"button\" class=\"btn\" @click.prevent=\"resetVideo\">{{cancelBtnContent}}</button>\n      <button type=\"button\" class=\"btn\" @click.prevent=\"done\">{{doneBtnContent}}</button> -->\n      </div>\n      <!-- <h1 class=\"error-video\">{{errText}}</h1>\n    <p>{{mess}}</p> -->\n    </div>\n\n  </section>\n      <section v-if=\"startupload\"  class=\"text-white fit fixed flex flex-center  bg-beage\">\n   \n        <div class=\"justify-center row\">\n          <q-avatar\n            style=\"border: 1px solid #ffffff; border-radius: 30px\"\n            icon=\"videocam\"\n          ></q-avatar>\n          <q-avatar\n            style=\"border: 1px solid #ffffff; border-radius: 30px\"\n            icon=\"backup\"\n          ></q-avatar>\n\n          <p class=\"q-px-xl q-mt-md q-mx-lg text-center\" style=\"font-size: 4vw\">\n            Вы собираетесь записать или загрузить видео?\n          </p>\n          <q-btn\n            class=\"text-red bg-white text-weight-bold col-7 h-vh-5\"\n            @click=\"resetVideo\"\n            style=\"border-radius: 30px\"\n            >Записать</q-btn\n          >\n          <q-file\n            borderless\n            error-message=\"error\"\n    \n            v-model=\"file\"\n            class=\"col-7 q-mt-lg h-vh-5 bg-white\"\n            style=\"border-radius: 30px\"\n            accept=\".mp4,.m4a,.mkv,.mov\"\n            @input=\"upload\"\n          >\n            <p class=\"absolute-center text-red bg-white text-uppercase text-weight-bold\">\n              Загрузить\n            </p>\n          </q-file>\n          <q-btn\n            class=\"col-7 q-mt-xl h-vh-5 q-mx-auto\"\n            icon=\"arrow_back_ios\"\n            rounded\n            outline\n            @click=\"goback\"\n          />\n        </div>\n\n    </section>\n</div>\n</template>\n\n<script>\nimport http from \"../../http-common\";\nimport { LocalStorage, Platform } from \"quasar\";\nimport { Plugins } from '@capacitor/core'\nimport * as getMedia from \"get-user-media-promise\";\nimport { mapState } from 'vuex';\n\n\nexport default {\n  name: \"VideoCapture\",\n  props: {\n    uploadUrl: {\n      default: null,\n    },\n    recordBtnContent: {\n      default: \"Record\",\n    },\n    stopBtnContent: {\n      default: \"◼\",\n    },\n    cancelBtnContent: {\n      default: \"Cancel\",\n    },\n    doneBtnContent: {\n      default: \"OK\",\n    },\n  },\n  data() {\n    return {\n      startupload: true,\n      activeC: \"fullpage\",\n      alert: null,\n      notempty: false,\n      file: null,\n      errText: null,\n      isValid: false,\n      activeC2:'h-vh-68-m',\n      splayer:true,\n      isUploading: false,\n      isRecording: false,\n      videoinfos:false,\n      player:true,\n      isFinished: false,\n      modefile: false,\n      recorder: null,\n      connection: null,\n      videoRecorder:true,\n      videoUrl: null,\n      progress:0,\n      videoUrlelastic: null,\n      tags: null,\n      uploadState3:false,\n      mess: null,\n      example: null,\n      uploadState2:false,\n      filesend: false,\n      mediaStream: null,\n    };\n  },\n  computed:{\n  ...mapState(['pcm'])\n  },\n  created() {\n    if (!this.uploadUrl) this.errText = \"There is no upload url available\";\n    // this.getWebSocket(); // initialize connection to WebSocket\n  },\n  beforeMount(){\n     if (!this.pcm.auth | !this.pcm.user.rol) {\n      this.$root.$emit('changepage', 1)\n    }\n  },\n  mounted: function () {\n\n  },\n  sockets: {\n    vsuccCreated: function (response) {\n      if (response.status == \"ok\") {\n        this.$refs.videoRec.src = response.videourl;\n        // this.mediaStream.stream.getTracks().forEach(track => track.stop());\n        this.isRecording = false;\n        this.activeC = \"h-vh-68 \";\n        this.isFinished = true;\n        // delete this.mediaStream;\n      }\n    },\n  },\n  methods: {\n    closest(logic) {\n      this.startupload = false;\n    },\n    async upload () {\n         if(Platform.is.capacitor){\n     let vm = this\n     const { FilePicker } = Plugins\n    // const uri = await Filesystem.getUri({directory:'EXTERNAL', path:'.'});\n    // Filesystem.readFile({path:uri}).then(file=>{\n      \n      \n    // }).finally(()=>{\n     \n    // })\n    FilePicker.showFilePicker({\n  fileTypes: [\"video/*\", \"video/mp4\"],\n}).then(\n  (fileResult) => {\n    const fileUri = fileResult.uri;\n    const fileName = fileResult.name;\n    const fileMimeType = fileResult.mimeType;\n    const fileExtension = fileResult.extension;\n    vm.file = file\n  },\n  (error) => {\n    console.log(error);\n  }\n).finally(()=>{\n vm.upload()\n});\n     }else {\n      (this.filesend = true), (this.startupload = false);\n      // this.$socket.emit(\"fileuploader\", this.file);\n      //console.log(this.file)\n     // this.getWebSocket();\n     // this.videoDataHandlerv2(this.file);\n     this.activeC = \"h-vh-68\";\n     this.isValid = true\n     this.player = false\n        this.videoinfos = true;\n     this.videoRecorder = false\n       this.$nextTick(()=>{\n      this.$refs.videoRec.src = URL.createObjectURL(this.file)\n       })\n     }\n    },\n            uploadvid(){\n            let vm = this\n            var op = 100\n            this.BinaryClient().then((client)=>{\n              vm.isUploading = true;\n                 this.modefile = true;\n           \n             client.on('open', function(){\n                var stream = client.send(vm.file, {name: vm.file.name, size: vm.file.size});\n                                   var tx = 0;\n                 stream.on('data', function(data){\n                  console.log(data);\n                 data.stage === 2 &&  data.state === \"start\" ? (tx = 0, vm.uploadState2 = true, op=10000) : null;\n                  data.stage === 3 &&  data.state === \"start\" ? (tx = 0, vm.uploadState3 = true, vm.videoUrl = data.url,  op=100) : null;\n                  data.state === \"done\" ? (vm.videoUrl = data.url,vm.done(),  vm.isFinished = true ,vm.activeC = \"h-vh-68\") : null;\n          vm.progress = Math.round(tx+=data.rx*op)/100;\n         // console.log(Math.round(tx),\"% to complete\");\n        });\n             })\n             \n          })        \n    \n        },\n    // reset video display with media device media stream\n    cancelVideo() {\n      this.videoUrl = null;\n    },\n    onStream(mediaStream) {\n      this.$refs.videoRec?this.$refs.videoRec.srcObject = mediaStream:null;\n      this.$refs.videoRec?this.$refs.videoRec.load():null;\n      this.$refs.videoRec?this.$refs.videoRec.play():null;\n      //this.toggleVideo();\n    },\n    onResult(video) {\n       (this.filesend = true), (this.startupload = false);\n\n     this.file = video\n     console.log(video);\n     this.activeC = \"h-vh-68\";\n     this.isValid = true\n     this.splayer = false\n     this.player = true\n        this.videoinfos = true;\n     this.videoRecorder = false;\n       this.$nextTick(()=>{\n\n      this.$refs.videoRec2.setAttribute('src',URL.createObjectURL(video));\n      this.$refs.videoRec2.load()\n       })\n    },\n    resetVideo() {\n      //reset !=mounted\n      var vm = this;\n         this.activeC = \"h-vh-100\";\n     this.isValid = true\n     this.player = true\n        this.videoinfos = false;\n     this.videoRecorder = true\n      this.$refs.videoRec?this.$refs.videoRec.muted = true:null;\n      getMedia({\n        video: true,\n        audio: { width: window.innerWidth, height: window.innerHeight },\n      })\n        .then(function (stream) {\n          vm.mediaStream = {\n            stream,\n          };\n          vm.gotStream(stream);\n        })\n        .catch(function (err) {\n          console.log(err);\n        });\n    },\n    // start recoording ///change\n    record() {\n      if (!this.uploadUrl) return;\n      this.getWebSocket();\n      this.isRecording = true;\n      this.recorder.start(1000);\n    },\n\n    // stop recording  ///change\n    stop() {\n      this.recorder.stream.getTracks().forEach((track) => track.stop());\n      this.recorder.stop();\n      this.mediaStream.stream.getTracks().forEach((track) => track.stop());\n      this.isRecording = false;\n      this.activeC = \"h-vh-68\";\n      this.isFinished = true;\n      this.connection.send(\"DONE\");\n      delete this.mediaStream;\n      delete this.recorder;\n    },\n    RecordController() {\n      if (this.isRecording) {\n        this.stop();\n      } else {\n        this.record();\n      }\n    },\n    chenged(evt) {\n      if (evt.length > 5) {\n        this.notempty = true;\n      }\n    },\n    // reset video diaply and emit video file url\n    done() {\n      this.send();\n      this.activeC = \"h-vh-68\";\n      this.gohome();\n    },\n    send() {\n      \n      var body = {\n        tag: this.tags,\n        text: this.example,\n        videolink: this.videoUrl,\n      };\n      http({\n        method: \"post\",\n        url: \"/create_videos\",\n        data: body,\n        headers: {\n          \"x-access-token\": this.pcm.user.tk,\n        },\n      }).then((response) => {\n        this.alert = response.data;\n       // this.resetVideo();\n        this.$emit(\"input\", this.videoUrl);\n        location.reload();\n        return;\n      });\n    },\n    gohome() {\n      location.reload()\n    },\n    goback: function () {\n      this.$router.back();\n    },\n    // initialize MediaRecorder and video element source\n    gotStream(mediaStream) {\n      this.recorder = new MediaRecorder(mediaStream, {\n        mimeType: \"video/webm;codecs=h264\",\n      });\n      this.recorder.ondataavailable = this.videoDataHandler;\n      this.$refs.videoRec.src = null;\n      this.$refs.videoRec.srcObject = mediaStream;\n      // this.toggleVideo();\n    },\n    // handle sending data for writing using the given WebSocket\n    videoDataHandler(event) {\n      //this.isUploading = true;\n      let reader = new FileReader();\n      reader.readAsArrayBuffer(event.data);\n      reader.onloadend = () => {\n        this.connection.send(reader.result);\n      };\n    },\n    videoDataHandlerv2(event) {\n      //this.isUploading = true;\n      \n      let reader = new FileReader();\n      reader.readAsArrayBuffer(event);\n      reader.onloadend = () => {\n        this.connection.onopen = () => {\n          this.connection.send(reader.result);\n          setTimeout(() => {\n            this.connection.close();\n         \n          }, event.size / 100);\n        };\n      };\n    },\n    // initialize WebSocket\n  \n    // update video when file written\n    updateVideoFile(fileName) {\n      this.videoUrl = this.uploadUrl + fileName + \".mp4\";\n      this.toggleVideo();\n      this.$refs.videoRec.srcObject = null;\n      this.$refs.videoRec.src = this.videoUrl;\n      this.isUploading = false;\n      LocalStorage.set(\"record\", this.videoUrl);\n    },\n    // toggle video display\n    toggleVideo() {\n      this.$refs.videoRec.loop = !this.$refs.videoRec.loop;\n      // this.$refs.videoRec.controls = !this.$refs.videoRec.controls;\n    },\n  },\n};\n</script>\n<style>\n  .plyr video {\n    height: 100vh !important;\n}\n</style>\n","<template>\n  <q-page class=\"bg-white\" v-touch:swipe.right=\"onright\">\n <!-- <q-input outlined v-model=\"number\" prefix=\"$\" label-slot clearable>\n        <template v-slot:prepend>\n          <q-avatar>\n            <img src=\"https://dev.camsguns.com/img/PCMLogo.svg\">\n          </q-avatar>\n        </template>\n\n        <template v-slot:label>\n          <strong class=\"text-deep-orange\">поиск</strong>\n          название <em class=\"q-px-sm bg-deep-orange text-white rounded-borders\">моделей</em>\n        </template>\n      </q-input> -->\n\n    <div class=\"row w-vw-100 h-vh-10\" >\n      <q-toolbar class=\"bg-black text-white rounded-borders\">\n        <q-btn round dense flat icon=\"navigate_before\" class=\"q-mr-xs\" to=\"/\" />\n        <q-avatar >\n          <img src=\"https://rec.camsguns.com/logo.png\">\n        </q-avatar>\n\n        <q-space />\n\n        <q-input dark borderless v-model=\"searchQuery\" placeholder=\"model name\" input-class=\"text-center text-uppercase text-subtitle2 text-weight-light\" class=\"q-ml-md\">\n          <template v-slot:append>\n            <q-icon v-if=\"searchQuery === ''\" name=\"search\" />\n            <q-icon v-else name=\"clear\" class=\"cursor-pointer\" @click=\"text = ''\" />\n          </template>\n        </q-input>\n      </q-toolbar>\n    </div>\n    <div class=\"row\" v-if=\"girlsVideos.length > 0\">\n      <div class=\"col-12 q-pd-xs q-pr-xs\" v-for=\"(girlVideo, index) in girlsVideos\" :key=\"girlVideo.id\" >\n          <q-item clickable v-ripple :to=\"'/'+girlVideo.link\">\n      <q-item-section side  :v-if=\"imageExists(index ,girlVideo.screen).status\">\n        <q-avatar rounded size=\"100px\" >\n          <img  :v-if=\"!!(girlVideo.status)\" :src=\"girlVideo.screen\" />\n          <q-badge floating color=\"red\">live</q-badge>\n        </q-avatar>\n      </q-item-section>\n      <q-item-section class=\"text-black text-uppercase text-left\">\n        <q-item-label>@{{girlVideo.username}}</q-item-label>\n        <q-item-label class=\"text-black text-uppercase text-left\" caption>{{girlVideo.otherData.UuserId.name}}</q-item-label>\n      </q-item-section>\n      <q-item-section side>\n        {{\n           getdatediff(girlVideo.otherData.updatedAt).month !== 0 ? `${getdatediff(girlVideo.otherData.updatedAt).month} months ago`:\n           getdatediff(girlVideo.otherData.updatedAt).day !== 0 ? `${getdatediff(girlVideo.otherData.updatedAt).day} days ago`:\n           getdatediff(girlVideo.otherData.updatedAt).hr !== 0 ? `${getdatediff(girlVideo.otherData.updatedAt).hr} hrs ago`:\n           `${getdatediff(girlVideo.otherData.updatedAt).min} min ago`}}\n      </q-item-section>\n      <q-item-section avatar>\n          <q-avatar round>\n            <img :src=\"girlVideo.otherData.avatars\">\n          </q-avatar>\n        </q-item-section>\n    </q-item>\n      </div>\n    </div>\n    <div class=\"row h-vh-100 w-vw-100 justify-center items-center\" v-else> \n    <div class=\"col-6\"><p class=\"text-black text-h6 text-uppercase text-weight-light text-center q-mx-auto q-my-auto\">no one is live</p></div> \n    </div>\n  </q-page>\n  \n</template>\n\n<script>\nimport http from \"../../http-common\";\nimport { LocalStorage, date } from 'quasar';\n\nexport default {\n  name:\"live\",\n  data() {\n    return {\n      model:\"\",\n      girlsVideos: [],\n      searchQuery:null,\n      girlsVideosBack:[]\n    };\n  },\n  watch:{\n    searchQuery: function(val){\n      this.girlsVideosBack = this.girlsVideos;\n     // console.log(val)\n      if(val){\n         this.girlsVideos = this.girlsVideos.filter(e=>e.username.search(val) !== -1 )\n     //  console.log(this.girlsVideos.filter(e=>e.username.search(val) !== -1 ))\n      } else {\n      this.girlsVideos = this.girlsVideosBack ; \n      }\n    \n    }\n  },\n  beforeCreate() {\n    http({\n      method: \"get\",\n      url: \"/models_online\",\n      headers: {\n        \"x-access-token\": LocalStorage.getItem(\"token\")\n      }\n    }).then(response => {\n      this.girlsVideos = response.data;\n    });\n    setInterval(\n      function() {\n        http({\n          method: \"get\",\n          url: \"/models_online\",\n          headers: {\n            \"x-access-token\": LocalStorage.getItem(\"token\")\n          }\n        }).then(response => {\n          if(!(this.searchQuery)){\n                this.girlsVideos = response.data;\n          }\n      \n        });\n      }.bind(this),\n      5000\n    );\n  },\n  methods: {\n      onright:function(){\n     this.$router.back()\n    },\n      getdatediff(dte){\n      let date2 = new Date(dte)\nlet date1 = new Date()\nlet diff = unit => date.getDateDiff(date1, date2, unit)\n     return {month:diff('months'),day:diff('days'),hr:diff('hours'),min:diff('minutes')}\n    },\n   imageExists: function (i, image_url){\n     this.girlsVideos[i].status = false;\n    var protocol = window.location.protocol\n    var url = `${protocol}//${image_url.split('//').reduce((a,q)=>a.length > q.length ? a : q )}`\n    // console.log(url.split('//').reduce((a,q)=>a.length > q.length ? a : q ))\n    var http = new XMLHttpRequest();\n    http.open('HEAD', url, false);\n    try {\n       http.send();\n       this.girlsVideos[i].screen = http.status !== 404 ? url : 'https://rec.camsguns.com/no-image.png';\n       this.girlsVideos[i].status = http.status !== 404;\n    } catch (error) {\n       this.girlsVideos[i].screen = http.status !== 404 ? url : 'https://rec.camsguns.com/no-image.png';\n       this.girlsVideos[i].status = http.status !== 404;\n    }\n    return {status:http.status != 404, img: url};\n\n}\n  }\n};\n</script>\n<style scoped>\n.vh100 {\n  height: 90vh;\n  width: 100%;\n}\n.vh40 {\n  height: 20vh;\n  width: 100%;\n}\n.mpb50 {\n  padding-top: 20vh;\n  height: 40vh;\n}\n.zi200 {\n  z-index: -200;\n}\n.bott {\n  margin-bottom: 0px;\n}\n.mb0 {\n  padding-top: 30vh;\n}\n.vh100 {\n  height: 100vh;\n}\n.zi200 {\n  z-index: 200;\n}\n</style\n>>\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n .swiper_menu {\n    .menu {\n      min-width: 100px;\n      width: 70%;\n      max-width: 320px;\n     background-color: #ffffff!important;\n      color: rgb(192, 9, 94);\n    }\n\n    .content {\n      width: 100%;\n    }\n\n    .menu-button {\n      position: absolute;\n         top: 48px;\n    left: 0px;\n    padding: 9px;\n      cursor: pointer;\n      transition: .3s;\n     // background-color: #2C8DFB;\n      z-index:2;\n      .bars {\n            position: relative;\n    display: block;\n    width: 27px;\n    height: 2px;\n    margin: 11px auto;\n    background-color: #fff;\n    border-radius: 10px;\n    transition: 0.3s;\n    z-index: 2;\n\n        &:nth-of-type(1) {\n          margin-top: 0px;\n        }\n        &:nth-of-type(3) {\n          margin-bottom: 0px;\n        }\n      }\n\n      &:hover {\n        .bars:nth-of-type(1) {\n          transform: translateY(1.5px) rotate(-4.5deg);\n        }\n        .bars:nth-of-type(2) {\n          opacity: .9;\n        }\n        .bars:nth-of-type(3) {\n          transform: translateY(-1.5px) rotate(4.5deg);\n        }\n      }\n\n      &.opened {\n        .bars:nth-of-type(1) {\n          transform: translateY(15px) rotate(-45deg);\n        }\n        .bars:nth-of-type(2) {\n          opacity: 0;\n        }\n        .bars:nth-of-type(3) {\n          transform: translateY(-15px) rotate(45deg);\n        }\n\n        &:hover {\n          .bars:nth-of-type(1) {\n            transform: translateY(13.5px) rotate(-40.5deg);\n          }\n          .bars:nth-of-type(2) {\n            opacity: .1;\n          }\n          .bars:nth-of-type(3) {\n            transform: translateY(-13.5px) rotate(40.5deg);\n          }\n        }\n      }\n    }\n  }\n.vh100 {\n  height: 100vh !important;\n  height: calc(var(--vh, 1vh) * 100) !important;\n  max-height: 100% !important;\n  width: 100% !important;\n  object-fit: cover !important;\n}\n\n.vh40 {\n  height: 20vh;\n  width: 100%;\n}\n\n.mpb50 {\n  padding-top: 20vh;\n  height: 40vh;\n}\n\n.zi200 {\n  z-index: -200;\n}\n\n.bott {\n  margin-bottom: 0px;\n}\n\n.mb0 {\n  padding-top: 30vh;\n}\n\n.zi200 {\n  z-index: 200;\n}\n\n.mt20 {\n  margin-top: -40px;\n}\n\n.comdial {\n  max-height: 60vh;\n}\n\n.clbtn {\n  display: block;\n  float: right;\n  margin-top: 0%;\n}\n\n.pb50 {\n  padding-bottom: 15vh;\n}\n\n.shadow {\n  -webkit-filter: drop-shadow(0px 0px 1px black);\n  filter: drop-shadow(0px 0px 1px black);\n}\n","@import url('https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900&display=swap');\n\n\n\n.btn-bot{\n    top: 70vh;\n    z-index:999999999999999999999;\n}\n// Nav menu scss\n#nav {\n  border: 1px solid blue;\n  margin: 20px auto;\n  font-size: 25px;\n  display: flex;\n  justify-content: center;\n  align-items:center;\n  color:rgb(167, 167, 167);\n  *{\n    margin: 10px;\n  }\n  a{\n    color: rgb(167, 167, 167);\n    text-decoration: none;\n  }\n}\n\n//video-capture scss\n.video-cap-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  .stream-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  }\n  .controls {\n    margin: 10px;\n    .btn {\n      margin: 10px;\n    }\n  }\n  .camera,\n  .preview {\n    object-fit: fill;\n  }\n  .camera {\n    width: 100%;\n    filter: FlipH;\n  }\n  .error-video {\n    font-size: 25px;\n    color: #ba5151;\n    margin: 10px;\n  }\n}\n\n\n//photo-capture scss\n.photo-capture {\n  padding: 10px;\n  margin: 10px;\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n  .camera,\n  .preview {\n    margin: 10px;\n    width: 100%;\n    object-fit: fill;\n  }\n  .camera {\n    transform: scaleX(-1);\n    filter: FlipH;\n  }\n}\n\n//loader scss\n.loader {\n  margin: 0 auto;\n  border: 16px solid #34495e; /* Light grey */\n  border-top: 16px solid #41b883; /* Blue */\n  border-radius: 50%;\n  width: 80px;\n  height: 80px;\n  animation: spin 2s linear infinite;\n}\n\n\n.flex-center {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.btn {\n  margin-top: 10px;\n  background-color: red;\n  color: white;\n  margin: 10px;\n  min-width: 65px;\n  height: 65px;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  transition: 0.3s;\n  &:hover {\n    background-color: red;\n    color: white;\n  }\n  .fas {\n    font-size: 25px;\n  }\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n","@import url(\"https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900&display=swap\");\n.btn-bot {\n  top: 70vh;\n  z-index: 1000000000000000100000;\n}\n\n#nav {\n  border: 1px solid blue;\n  margin: 20px auto;\n  font-size: 25px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #a7a7a7;\n}\n#nav * {\n  margin: 10px;\n}\n#nav a {\n  color: #a7a7a7;\n  text-decoration: none;\n}\n\n.video-cap-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.video-cap-container .stream-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n.video-cap-container .controls {\n  margin: 10px;\n}\n.video-cap-container .controls .btn {\n  margin: 10px;\n}\n.video-cap-container .camera,\n.video-cap-container .preview {\n  object-fit: fill;\n}\n.video-cap-container .camera {\n  width: 100%;\n  filter: FlipH;\n}\n.video-cap-container .error-video {\n  font-size: 25px;\n  color: #ba5151;\n  margin: 10px;\n}\n\n.photo-capture {\n  padding: 10px;\n  margin: 10px;\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-around;\n}\n.photo-capture .camera,\n.photo-capture .preview {\n  margin: 10px;\n  width: 100%;\n  object-fit: fill;\n}\n.photo-capture .camera {\n  transform: scaleX(-1);\n  filter: FlipH;\n}\n\n.loader {\n  margin: 0 auto;\n  border: 16px solid #34495e;\n  /* Light grey */\n  border-top: 16px solid #41b883;\n  /* Blue */\n  border-radius: 50%;\n  width: 80px;\n  height: 80px;\n  animation: spin 2s linear infinite;\n}\n\n.flex-center {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.btn {\n  margin-top: 10px;\n  background-color: red;\n  color: white;\n  margin: 10px;\n  min-width: 65px;\n  height: 65px;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  transition: 0.3s;\n}\n.btn:hover {\n  background-color: red;\n  color: white;\n}\n.btn .fas {\n  font-size: 25px;\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}"]}